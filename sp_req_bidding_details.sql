CREATE DEFINER=`chiumdb`@`%` PROCEDURE `sp_req_bidding_details`(
	IN IN_COLLECTOR_BIDDING_ID				BIGINT				/*입력값 : COLLECTOR_BIDDING.ID*/
)
BEGIN

/*
Procedure Name 	: sp_req_bidding_details
Input param 	: 1개
Job 			: 개별 수거자에 대한 입찰 상세 정보
Update 			: 2022.01.24
Version			: 0.0.1
AUTHOR 			: Leo Nam
*/

    DECLARE vRowCount 						INT DEFAULT 0;
    DECLARE endOfRow 						TINYINT DEFAULT FALSE;    
    DECLARE CUR_COLLECTOR_BIDDING_ID		BIGINT;
    DECLARE CUR_DISPOSER_ORDER_ID			BIGINT;
    DECLARE CUR_COLLECTOR_SITE_NAME			VARCHAR(255);
    DECLARE CUR_COLLECTOR_SI_DO				VARCHAR(20);
    DECLARE CUR_COLLECTOR_SI_GUN_GU			VARCHAR(20);
    DECLARE CUR_DISPOSER_ORDER_CODE			VARCHAR(10);
    DECLARE CUR_DISPOSER_SI_DO				VARCHAR(20);
    DECLARE CUR_DISPOSER_SI_GUN_GU			VARCHAR(20);
    DECLARE CUR_DISPOSER_EUP_MYEON_DONG		VARCHAR(20);
    DECLARE CUR_DISPOSER_DONG_RI			VARCHAR(20);
    DECLARE CUR_DISPOSER_ADDR				VARCHAR(255);
    DECLARE CUR_COLLECTOR_CATEGORY_ID		INT;
    DECLARE CUR_STATE_CODE					INT;
    DECLARE CUR_STATE						VARCHAR(20);
    DECLARE CUR_TRANSACTION_ID				BIGINT;
    DECLARE TEMP_CURSOR		 				CURSOR FOR 
	SELECT 
		A.ID, 
        B.SITE_NAME, 
        C.SI_DO, 
        C.SI_GUN_GU, 
        A.DISPOSAL_ORDER_ID, 
        D.ORDER_CODE, 
        G.SI_DO, 
        G.SI_GUN_GU, 
        G.EUP_MYEON_DONG, 
        G.DONG_RI, 
        F.ADDR,
        E.COLLECTOR_CATEGORY_ID,
        E.STATE_CODE,
        E.STATE, 
        D.TRANSACTION_ID 
    FROM COLLECTOR_BIDDING A
    LEFT JOIN COMP_SITE B ON A.COLLECTOR_ID = B.ID
    LEFT JOIN KIKCD_B C ON B.KIKCD_B_CODE = C.B_CODE
    LEFT JOIN SITE_WSTE_DISPOSAL_ORDER D ON A.DISPOSAL_ORDER_ID = D.ID
    LEFT JOIN V_BIDDING_STATE_NAME E ON A.ID = E.COLLECTOR_BIDDING_ID
    LEFT JOIN COMP_SITE F ON D.SITE_ID = F.ID
    LEFT JOIN KIKCD_B G ON F.KIKCD_B_CODE = G.B_CODE
	WHERE A.ID = IN_COLLECTOR_BIDDING_ID;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET endOfRow = TRUE;
    
	CREATE TEMPORARY TABLE IF NOT EXISTS BIDDING_DETAILS_TEMP (
		COLLECTOR_BIDDING_ID			BIGINT,
		COLLECTOR_SITE_NAME				VARCHAR(255),
		COLLECTOR_SI_DO					VARCHAR(20),
		COLLECTOR_SI_GUN_GU				VARCHAR(20),
		DISPOSER_ORDER_ID				BIGINT,
		DISPOSER_ORDER_CODE				VARCHAR(10),
        DISPOSER_SI_DO 					VARCHAR(20),
        DISPOSER_SI_GUN_GU 				VARCHAR(20),
        DISPOSER_EUP_MYEON_DONG			VARCHAR(20),
        DISPOSER_DONG_RI				VARCHAR(20),
        DISPOSER_ADDR					VARCHAR(255),
        STATE_CODE						INT,
		WSTE_LIST						JSON,
		DISPLAY_DATE					DATETIME,
		STATE							VARCHAR(20),
        DISPOSER_ORDER_INFO				JSON,
        TRANSACTION_WSTE_LIST			JSON
	);        
	
	OPEN TEMP_CURSOR;	
	cloop: LOOP
		FETCH TEMP_CURSOR 
		INTO 
			CUR_COLLECTOR_BIDDING_ID,
			CUR_COLLECTOR_SITE_NAME,
			CUR_COLLECTOR_SI_DO,
			CUR_COLLECTOR_SI_GUN_GU,
			CUR_DISPOSER_ORDER_ID,
			CUR_DISPOSER_ORDER_CODE,
			CUR_DISPOSER_SI_DO,
			CUR_DISPOSER_SI_GUN_GU,
			CUR_DISPOSER_EUP_MYEON_DONG,
			CUR_DISPOSER_DONG_RI,
			CUR_DISPOSER_ADDR,
			CUR_COLLECTOR_CATEGORY_ID,
			CUR_STATE_CODE,
			CUR_STATE,
			CUR_TRANSACTION_ID;   
		
		SET vRowCount = vRowCount + 1;
		IF endOfRow THEN
			LEAVE cloop;
		END IF;
		
		INSERT INTO 
		BIDDING_DETAILS_TEMP(
			COLLECTOR_BIDDING_ID, 
			COLLECTOR_SITE_NAME, 
			COLLECTOR_SI_DO, 
			COLLECTOR_SI_GUN_GU, 
			DISPOSER_ORDER_ID, 
			DISPOSER_ORDER_CODE, 
			DISPOSER_SI_DO,
			DISPOSER_SI_GUN_GU,
			DISPOSER_EUP_MYEON_DONG,
			DISPOSER_DONG_RI,
			DISPOSER_ADDR,
			STATE_CODE,
			STATE
		)
		VALUES(
			CUR_COLLECTOR_BIDDING_ID, 
			CUR_COLLECTOR_SITE_NAME, 
			CUR_COLLECTOR_SI_DO, 
			CUR_COLLECTOR_SI_GUN_GU, 
			CUR_DISPOSER_ORDER_ID, 
			CUR_DISPOSER_ORDER_CODE, 
			CUR_DISPOSER_SI_DO,
			CUR_DISPOSER_SI_GUN_GU,
			CUR_DISPOSER_EUP_MYEON_DONG,
			CUR_DISPOSER_DONG_RI,
			CUR_DISPOSER_ADDR,
			CUR_STATE_CODE,
			CUR_STATE
		);
        
        CALL sp_get_collector_bidding_wste_lists(
			CUR_COLLECTOR_BIDDING_ID,
            @BIDDING_WSTE_LIST
        );
            
		CALL sp_set_display_time_for_collector(
			CUR_DISPOSER_ORDER_ID,
			CUR_COLLECTOR_BIDDING_ID,
			CUR_COLLECTOR_CATEGORY_ID,
			@DISPLAY_DATE
		);
        
        CALL sp_get_disposal_order_info(
			CUR_DISPOSER_ORDER_ID,
            @DISPOSER_ORDER_INFO
        );
        
        CALL sp_get_collector_wste_lists(
			CUR_DISPOSER_ORDER_ID,
            CUR_TRANSACTION_ID,
            @TRANSACTION_WSTE_LIST
        );
		
		UPDATE BIDDING_DETAILS_TEMP 
        SET 
			WSTE_LIST 				= @BIDDING_WSTE_LIST, 
			DISPLAY_DATE 			= @DISPLAY_DATE, 
			DISPOSER_ORDER_INFO 	= @DISPOSER_ORDER_INFO, 
			TRANSACTION_WSTE_LIST 	= @TRANSACTION_WSTE_LIST  
        WHERE DISPOSER_ORDER_ID 	= CUR_DISPOSER_ORDER_ID;
		/*위에서 받아온 JSON 타입 데이타를 비롯한 몇가지의 데이타를 NEW_COMING 테이블에 반영한다.*/
		
		
	END LOOP;   
	CLOSE TEMP_CURSOR;
    
    IF vRowCount = 0 THEN
		SET @rtn_val = 29301;
		SET @msg_txt = 'No data found';
		SET @json_data = NULL;
    ELSE
		SET @rtn_val = 0;
		SET @msg_txt = 'Success';
		SELECT JSON_ARRAYAGG(
			JSON_OBJECT(
				'COLLECTOR_BIDDING_ID', 		COLLECTOR_BIDDING_ID, 
				'COLLECTOR_SITE_NAME', 			COLLECTOR_SITE_NAME, 
				'COLLECTOR_SI_DO', 				COLLECTOR_SI_DO, 
				'COLLECTOR_SI_GUN_GU', 			COLLECTOR_SI_GUN_GU, 
				'DISPOSER_ORDER_ID', 			DISPOSER_ORDER_ID, 
				'DISPOSER_ORDER_CODE', 			DISPOSER_ORDER_CODE, 
				'DISPOSER_SI_DO', 				DISPOSER_SI_DO, 
				'COLLECTOR_SI_GUN_GU', 			COLLECTOR_SI_GUN_GU, 
				'DISPOSER_EUP_MYEON_DONG', 		DISPOSER_EUP_MYEON_DONG, 
				'DISPOSER_DONG_RI', 			DISPOSER_DONG_RI, 
				'DISPOSER_ADDR', 				DISPOSER_ADDR, 
				'STATE_CODE', 					STATE_CODE, 
				'WSTE_LIST',					WSTE_LIST,
				'DISPLAY_DATE', 				DISPLAY_DATE,
				'STATE', 						STATE,
				'DISPOSER_ORDER_INFO', 			DISPOSER_ORDER_INFO,
				'TRANSACTION_WSTE_LIST', 		TRANSACTION_WSTE_LIST
			)
		) INTO @json_data FROM BIDDING_DETAILS_TEMP;
    END IF;
	CALL sp_return_results(@rtn_val, @msg_txt, @json_data);
	DROP TABLE IF EXISTS BIDDING_DETAILS_TEMP;
END