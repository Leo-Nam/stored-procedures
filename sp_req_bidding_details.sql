CREATE DEFINER=`chiumdb`@`%` PROCEDURE `sp_req_bidding_details`(
	IN IN_COLLECTOR_BIDDING_ID				BIGINT				/*입력값 : COLLECTOR_BIDDING.ID*/
)
BEGIN

/*
Procedure Name 	: sp_req_bidding_details
Input param 	: 1개
Job 			: 개별 수거자에 대한 입찰 상세 정보
Update 			: 2022.01.24
Version			: 0.0.1
AUTHOR 			: Leo Nam
*/

    DECLARE vRowCount 						INT DEFAULT 0;
    DECLARE endOfRow 						TINYINT DEFAULT FALSE;    
    DECLARE CUR_COLLECTOR_BIDDING_ID		BIGINT;
    DECLARE CUR_DISPOSER_ORDER_ID			BIGINT;
    DECLARE CUR_COLLECTOR_SITE_NAME			VARCHAR(255);
    DECLARE CUR_COLLECTOR_SI_DO				VARCHAR(20);
    DECLARE CUR_COLLECTOR_SI_GUN_GU			VARCHAR(20);
    DECLARE CUR_DISPOSER_ORDER_CODE			VARCHAR(10);
    DECLARE CUR_DISPOSER_SI_DO				VARCHAR(20);
    DECLARE CUR_DISPOSER_SI_GUN_GU			VARCHAR(20);
    DECLARE CUR_DISPOSER_EUP_MYEON_DONG		VARCHAR(20);
    DECLARE CUR_DISPOSER_DONG_RI			VARCHAR(20);
    DECLARE CUR_DISPOSER_ADDR				VARCHAR(255);
    DECLARE CUR_STATE_CODE					INT;
    DECLARE CUR_DATE 						DATETIME;	
    DECLARE CUR_STATE						VARCHAR(20);
    DECLARE TEMP_CURSOR		 				CURSOR FOR 
	SELECT 
		COLLECTOR_BIDDING_ID, 
        COLLECTOR_SITE_NAME, 
        COLLECTOR_SI_DO, 
        COLLECTOR_SI_GUN_GU, 
        DISPOSER_ORDER_ID, 
        DISPOSER_ORDER_CODE, 
        DISPOSER_SI_DO, 
        DISPOSER_SI_GUN_GU, 
        DISPOSER_EUP_MYEON_DONG, 
        DISPOSER_DONG_RI, 
        DISPOSER_ADDR,
        STATE_CODE,
		IF (STATE = '방문거절', DISPOSER_RESPONSE_VISIT_AT, 
			IF (STATE = '방문대기중', DISPOSER_VISIT_END_AT, 
				IF (STATE = '방문조기마감', DISPOSER_VISIT_EARLY_CLOSED_AT, 
					IF (STATE = '방문포기', COLLECTOR_RECORD_UPDATED_AT, 
						IF (STATE = '입찰중', DISPOSER_BIDDING_END_AT, 
							IF (STATE = '입찰대기중', DISPOSER_BIDDING_END_AT, 
								IF (STATE = '입찰포기', COLLECTOR_RECORD_UPDATED_AT, 
									IF (STATE = '선정중', DISPOSER_BIDDING_END_AT, 
										IF (STATE = '선정대기중', DISPOSER_BIDDING_END_AT, 
											IF (STATE = '낙찰포기', COLLECTOR_REJECTED_AT, 
												IF (STATE = '낙찰', COLLECTOR_RECORD_UPDATED_AT, 
													IF (STATE = '유찰', DISPOSER_BIDDING_END_AT, 
														DISPOSER_BIDDING_END_AT
													)
												)
											)
										)
									)
								)
							)
						)
					)
				)
			)
		), STATE
    FROM V_COLLECTOR_BIDDING_WITH_STATE
	WHERE COLLECTOR_BIDDING_ID = IN_COLLECTOR_BIDDING_ID;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET endOfRow = TRUE;
    
	CREATE TEMPORARY TABLE IF NOT EXISTS CURRENT_STATE (
		COLLECTOR_BIDDING_ID			BIGINT,
		COLLECTOR_SITE_NAME				VARCHAR(255),
		COLLECTOR_SI_DO					VARCHAR(20),
		COLLECTOR_SI_GUN_GU				VARCHAR(20),
		DISPOSER_ORDER_ID				BIGINT,
		DISPOSER_ORDER_CODE				VARCHAR(10),
        DISPOSER_SI_DO 					VARCHAR(20),
        DISPOSER_SI_GUN_GU 				VARCHAR(20),
        DISPOSER_EUP_MYEON_DONG			VARCHAR(20),
        DISPOSER_DONG_RI				VARCHAR(20),
        DISPOSER_ADDR					VARCHAR(255),
        STATE_CODE						INT,
		WSTE_LIST						JSON,
		CREATED_AT						DATETIME,
		STATE							VARCHAR(20)
	);        
	
	OPEN TEMP_CURSOR;	
	cloop: LOOP
		FETCH TEMP_CURSOR 
		INTO 
			CUR_COLLECTOR_BIDDING_ID,
			CUR_COLLECTOR_SITE_NAME,
			CUR_COLLECTOR_SI_DO,
			CUR_COLLECTOR_SI_GUN_GU,
			CUR_DISPOSER_ORDER_ID,
			CUR_DISPOSER_ORDER_CODE,
			CUR_DISPOSER_SI_DO,
			CUR_DISPOSER_SI_GUN_GU,
			CUR_DISPOSER_EUP_MYEON_DONG,
			CUR_DISPOSER_DONG_RI,
			CUR_DISPOSER_ADDR,
			CUR_STATE_CODE,
			CUR_DATE,
			CUR_STATE;   
		
		SET vRowCount = vRowCount + 1;
		IF endOfRow THEN
			LEAVE cloop;
		END IF;
		
		INSERT INTO 
		CURRENT_STATE(
			COLLECTOR_BIDDING_ID, 
			COLLECTOR_SITE_NAME, 
			COLLECTOR_SI_DO, 
			COLLECTOR_SI_GUN_GU, 
			DISPOSER_ORDER_ID, 
			DISPOSER_ORDER_CODE, 
			DISPOSER_SI_DO,
			DISPOSER_SI_GUN_GU,
			DISPOSER_EUP_MYEON_DONG,
			DISPOSER_DONG_RI,
			DISPOSER_ADDR,
			STATE_CODE,
			CREATED_AT, 
			STATE
		)
		VALUES(
			CUR_COLLECTOR_BIDDING_ID, 
			CUR_COLLECTOR_SITE_NAME, 
			CUR_COLLECTOR_SI_DO, 
			CUR_COLLECTOR_SI_GUN_GU, 
			CUR_DISPOSER_ORDER_ID, 
			CUR_DISPOSER_ORDER_CODE, 
			CUR_DISPOSER_SI_DO,
			CUR_DISPOSER_SI_GUN_GU,
			CUR_DISPOSER_EUP_MYEON_DONG,
			CUR_DISPOSER_DONG_RI,
			CUR_DISPOSER_ADDR,
			CUR_STATE_CODE,
			CUR_DATE, 
			CUR_STATE
		);
        
		SELECT JSON_ARRAYAGG(JSON_OBJECT(
			'WSTE_NM'			, WSTE_NM, 
            'UNIT'				, UNIT, 
            'UNIT_PRICE'		, UNIT_PRICE, 
            'VOLUME'			, VOLUME, 
            'TRMT_METHOD_NM'	, TRMT_METHOD_NM
		)) 
        INTO @WSTE_LIST 
        FROM V_BIDDING_DETAILS 
        WHERE COLLECTOR_BIDDING_ID = CUR_COLLECTOR_BIDDING_ID;
		/*DISPOSAL_ORDER_ID에 등록된 폐기물 종류 중 하나만 불러온다.*/
		
		UPDATE CURRENT_STATE SET WSTE_LIST = @WSTE_LIST WHERE DISPOSER_ORDER_ID = CUR_DISPOSER_ORDER_ID;
		/*위에서 받아온 JSON 타입 데이타를 비롯한 몇가지의 데이타를 NEW_COMING 테이블에 반영한다.*/
		
		
	END LOOP;   
	CLOSE TEMP_CURSOR;
    
    IF vRowCount = 0 THEN
		SET @rtn_val = 29301;
		SET @msg_txt = 'No data found';
		SET @json_data = NULL;
    ELSE
		SET @rtn_val = 0;
		SET @msg_txt = 'Success';
		SELECT JSON_ARRAYAGG(
			JSON_OBJECT(
				'COLLECTOR_BIDDING_ID', 		COLLECTOR_BIDDING_ID, 
				'COLLECTOR_SITE_NAME', 			COLLECTOR_SITE_NAME, 
				'COLLECTOR_SI_DO', 				COLLECTOR_SI_DO, 
				'COLLECTOR_SI_GUN_GU', 			COLLECTOR_SI_GUN_GU, 
				'DISPOSER_ORDER_ID', 			DISPOSER_ORDER_ID, 
				'DISPOSER_ORDER_CODE', 			DISPOSER_ORDER_CODE, 
				'DISPOSER_SI_DO', 				DISPOSER_SI_DO, 
				'COLLECTOR_SI_GUN_GU', 			COLLECTOR_SI_GUN_GU, 
				'DISPOSER_EUP_MYEON_DONG', 		DISPOSER_EUP_MYEON_DONG, 
				'DISPOSER_DONG_RI', 			DISPOSER_DONG_RI, 
				'DISPOSER_ADDR', 				DISPOSER_ADDR, 
				'STATE_CODE', 					STATE_CODE, 
				'WSTE_LIST',					WSTE_LIST,
				'CREATED_AT', 					CREATED_AT,
				'STATE', 						STATE
			)
		) INTO @json_data FROM CURRENT_STATE;
    END IF;
	CALL sp_return_results(@rtn_val, @msg_txt, @json_data);
	DROP TABLE IF EXISTS CURRENT_STATE;
END