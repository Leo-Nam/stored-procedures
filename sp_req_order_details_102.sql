CREATE DEFINER=`chiumdb`@`%` PROCEDURE `sp_req_order_details_102`(
	IN IN_ORDER_ID				BIGINT,
    OUT OUT_DETAILS				JSON
)
BEGIN

    DECLARE vRowCount 								INT DEFAULT 0;
    DECLARE endOfRow 								TINYINT DEFAULT FALSE;    
    DECLARE CUR_COLLECTOR_SITE_ID					BIGINT;
    DECLARE CUR_COLLECTOR_SITE_NAME					VARCHAR(255);  
    DECLARE CUR_COLLECTOR_TRMT_BIZ_CODE				VARCHAR(4);    
    DECLARE CUR_COLLECTOR_TRMT_BIZ_NAME				VARCHAR(255);    
    DECLARE CUR_RESPONSE_VISIT						TINYINT;
    DECLARE CUR_AVATAR_PATH							VARCHAR(255);  
    DECLARE CUR_COLLECTOR_BIDDING_ID				BIGINT; 
    DECLARE VAR_STATE_CODE							INT DEFAULT NULL;
    DECLARE VAR_STATE								VARCHAR(20) DEFAULT NULL;
    DECLARE VAR_STATE_CATEGORY_ID					INT DEFAULT NULL;
    DECLARE VAR_STATE_CATEGORY						VARCHAR(20) DEFAULT NULL;
    DECLARE TEMP_CURSOR		 						CURSOR FOR 
	SELECT 
		C.ID, 
        C.SITE_NAME, 
        C.TRMT_BIZ_CODE,        
        E.NAME,
        A.RESPONSE_VISIT,
        D.AVATAR_PATH,
        A.ID
    FROM COLLECTOR_BIDDING A
    LEFT JOIN V_ORDER_STATE_NAME B 	ON A.DISPOSAL_ORDER_ID 		= B.DISPOSER_ORDER_ID
    LEFT JOIN COMP_SITE C 			ON A.COLLECTOR_ID 	= C.ID
    LEFT JOIN USERS D				ON C.ID = D.AFFILIATED_SITE
    LEFT JOIN WSTE_TRMT_BIZ E		ON C.TRMT_BIZ_CODE = E.CODE
	WHERE 
		B.STATE_CODE 		= 102 AND 
        A.DELETED	 		= FALSE AND
        C.ACTIVE			= TRUE AND
        B.DISPOSER_ORDER_ID	= IN_ORDER_ID AND
        D.ACTIVE			= TRUE AND
        D.CLASS				= 201;
            
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET endOfRow = TRUE;
	CREATE TEMPORARY TABLE IF NOT EXISTS ORDER_DETAILS_102_TEMP (
		COLLECTOR_SITE_ID					BIGINT,
		COLLECTOR_SITE_NAME					VARCHAR(255),
		COLLECTOR_TRMT_BIZ_CODE				VARCHAR(4),    
		COLLECTOR_TRMT_BIZ_NAME				VARCHAR(255),
		RESPONSE_VISIT						TINYINT,
		AVATAR_PATH							VARCHAR(255),
		COLLECTOR_BIDDING_ID				BIGINT,
        STATE_CODE							INT,
        STATE								VARCHAR(20),
        STATE_CATEGORY_ID					INT,
        STATE_CATEGORY						VARCHAR(20)
	);        
	
	OPEN TEMP_CURSOR;	
	cloop: LOOP        
		FETCH TEMP_CURSOR 
		INTO 
			CUR_COLLECTOR_SITE_ID,
			CUR_COLLECTOR_SITE_NAME,
			CUR_COLLECTOR_TRMT_BIZ_CODE,    
			CUR_COLLECTOR_TRMT_BIZ_NAME,
			CUR_RESPONSE_VISIT,
			CUR_AVATAR_PATH,
			CUR_COLLECTOR_BIDDING_ID;
		
		SET vRowCount = vRowCount + 1;
		IF endOfRow THEN
			LEAVE cloop;
		END IF;
		
		INSERT INTO 
		ORDER_DETAILS_102_TEMP(
			COLLECTOR_SITE_ID, 
			COLLECTOR_SITE_NAME, 
			COLLECTOR_TRMT_BIZ_CODE,     
			COLLECTOR_TRMT_BIZ_NAME,
			RESPONSE_VISIT,
			AVATAR_PATH,
			COLLECTOR_BIDDING_ID
		)
		VALUES(
			CUR_COLLECTOR_SITE_ID,
			CUR_COLLECTOR_SITE_NAME,
			CUR_COLLECTOR_TRMT_BIZ_CODE,    
			CUR_COLLECTOR_TRMT_BIZ_NAME,
			CUR_RESPONSE_VISIT,
			CUR_AVATAR_PATH,
			CUR_COLLECTOR_BIDDING_ID
		);    
        
        CALL sp_get_collector_state(
			IN_ORDER_ID,
            CUR_COLLECTOR_SITE_ID,
			VAR_STATE,
            VAR_STATE_CODE,
            VAR_STATE_CATEGORY_ID,
            VAR_STATE_CATEGORY
        );
    
		UPDATE ORDER_DETAILS_102_TEMP 
		SET 
			STATE = VAR_STATE,
			STATE_CODE = VAR_STATE_CODE,
			STATE_CATEGORY_ID = VAR_STATE_CATEGORY_ID,
			STATE_CATEGORY = VAR_STATE_CATEGORY 
		WHERE COLLECTOR_SITE_ID = CUR_COLLECTOR_SITE_ID;
            
	END LOOP;   
	CLOSE TEMP_CURSOR;
	
	SELECT JSON_ARRAYAGG(
		JSON_OBJECT(
			'COLLECTOR_SITE_ID'					, COLLECTOR_SITE_ID, 
            'COLLECTOR_SITE_NAME'				, COLLECTOR_SITE_NAME, 
            'COLLECTOR_TRMT_BIZ_CODE'			, COLLECTOR_TRMT_BIZ_CODE,             
            'COLLECTOR_TRMT_BIZ_NAME'			, COLLECTOR_TRMT_BIZ_NAME, 
            'RESPONSE_VISIT'					, RESPONSE_VISIT, 
            'AVATAR_PATH'						, AVATAR_PATH, 
            'COLLECTOR_BIDDING_ID'				, COLLECTOR_BIDDING_ID, 
            'STATE'								, STATE, 
            'STATE_CODE'						, STATE_CODE, 
            'STATE_CATEGORY_ID'					, STATE_CATEGORY_ID, 
            'STATE_CATEGORY'					, STATE_CATEGORY
		)
	) 
    INTO OUT_DETAILS 
    FROM ORDER_DETAILS_102_TEMP;
	DROP TABLE IF EXISTS ORDER_DETAILS_102_TEMP;
END