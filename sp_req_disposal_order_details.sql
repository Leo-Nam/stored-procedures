CREATE DEFINER=`chiumdb`@`%` PROCEDURE `sp_req_disposal_order_details`(
	IN IN_DISPOSER_ORDER_ID							BIGINT
)
BEGIN

/*
Procedure Name 	: sp_req_disposal_order_details
Input param 	: 1개
Job 			: 배출자의 배출신청에 대한 입찰 상세정보
Update 			: 2022.02.15
Version			: 0.0.4
AUTHOR 			: Leo Nam
*/
    

    DECLARE vRowCount 								INT DEFAULT 0;
    DECLARE endOfRow 								TINYINT DEFAULT FALSE;    
    DECLARE CUR_DISPOSER_ORDER_ID					BIGINT;
    DECLARE CUR_DISPOSER_ORDER_CODE					VARCHAR(10);
    DECLARE CUR_DISPOSER_SITE_ID					BIGINT;
    DECLARE CUR_DISPOSER_SITE_SI_DO					VARCHAR(20);
    DECLARE CUR_DISPOSER_SITE_SI_GUN_GU				VARCHAR(20);
    DECLARE CUR_DISPOSER_SITE_EUP_MYEON_DONG		VARCHAR(20);
    DECLARE CUR_DISPOSER_SITE_DONG_RI				VARCHAR(20);
    DECLARE CUR_DISPOSER_SITE_ADDR					VARCHAR(255);
    DECLARE CUR_DATE 								DATETIME;	
    DECLARE CUR_STATE								VARCHAR(20);
    DECLARE CUR_STATE_CODE							INT;
    DECLARE CUR_NOTE								VARCHAR(255);
    DECLARE CUR_B_CODE								VARCHAR(10);
    DECLARE CUR_WSTE_DISPOSED_SI_DO					VARCHAR(20);
    DECLARE CUR_WSTE_DISPOSED_SI_GUN_GU				VARCHAR(20);
    DECLARE CUR_WSTE_DISPOSED_EUP_MYEON_DONG		VARCHAR(20);
    DECLARE CUR_WSTE_DISPOSED_DONG_RI				VARCHAR(20);
    DECLARE CUR_WSTE_DISPOSED_KIKCD_B_CODE			VARCHAR(20);
    DECLARE CUR_WSTE_DISPOSED_ADDR					VARCHAR(255);
    DECLARE CUR_DISPOSER_CREATED_AT					DATETIME;	
    DECLARE CUR_DISPOSER_CLOSE_AT					DATETIME;	
    DECLARE CUR_STATE_CATEGORY_CODE					INT;
    DECLARE CUR_TRANSACTION_ID						BIGINT;
    DECLARE TEMP_CURSOR		 						CURSOR FOR 
	SELECT 
		DISPOSER_ORDER_ID, 
		DISPOSER_ORDER_CODE, 
        DISPOSER_SITE_ID,
        DISPOSER_SITE_SI_DO,
        DISPOSER_SITE_SI_GUN_GU,
        DISPOSER_SITE_EUP_MYEON_DONG,
        DISPOSER_SITE_DONG_RI,
        DISPOSER_SITE_ADDR,
        STATE, 
        STATE_CODE,
        NOTE,
        DISPOSER_SITE_KIKCD_B_CODE,
        WSTE_DISPOSED_SI_DO,
        WSTE_DISPOSED_SI_GUN_GU,
        WSTE_DISPOSED_EUP_MYEON_DONG,
        WSTE_DISPOSED_DONG_RI,
        WSTE_DISPOSED_KIKCD_B_CODE,
        WSTE_DISPOSED_ADDR,
        DISPOSER_CREATED_AT,
        DISPOSER_CLOSE_AT,
        STATE_CATEGORY_ID,
        TRANSACTION_ID
    FROM V_SITE_WSTE_DISPOSAL_ORDER_WITH_STATE
	WHERE DISPOSER_ORDER_ID = IN_DISPOSER_ORDER_ID;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET endOfRow = TRUE;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		ROLLBACK;
		DROP TABLE IF EXISTS CURRENT_STATE;
		SET @json_data 		= NULL;
		CALL sp_return_results(@rtn_val, @msg_txt, @json_data);
	END;        
	START TRANSACTION;				
    /*트랜잭션 시작*/  
    
	CREATE TEMPORARY TABLE IF NOT EXISTS CURRENT_STATE (
		DISPOSER_ORDER_ID							BIGINT,
		DISPOSER_ORDER_CODE							VARCHAR(10),
		DISPOSER_SITE_ID							BIGINT,
		DISPOSER_SITE_SI_DO							VARCHAR(20),
		DISPOSER_SITE_SI_GUN_GU						VARCHAR(20),
		DISPOSER_SITE_EUP_MYEON_DONG				VARCHAR(20),
		DISPOSER_SITE_DONG_RI						VARCHAR(20),
		DISPOSER_SITE_ADDR							VARCHAR(255),
		DISPLAY_DATE								DATETIME,
		STATE										VARCHAR(20),
		STATE_CODE									INT,
		NOTE										VARCHAR(255),
		DISPOSER_SITE_KIKCD_B_CODE					VARCHAR(20),
		WSTE_DISPOSED_SI_DO							VARCHAR(20),
		WSTE_DISPOSED_SI_GUN_GU						VARCHAR(20),
		WSTE_DISPOSED_EUP_MYEON_DONG				VARCHAR(20),
		WSTE_DISPOSED_DONG_RI						VARCHAR(20),
		WSTE_DISPOSED_KIKCD_B_CODE					VARCHAR(20),
		WSTE_DISPOSED_ADDR							VARCHAR(255),
		DISPOSER_CREATED_AT							DATETIME,
		DISPOSER_CLOSE_AT							DATETIME,
		STATE_CATEGORY_CODE							INT,
		TRANSACTION_ID								BIGINT,
		DISPOSAL_WSTE_LIST							JSON,
		IMG_LIST									JSON,
		COLLECTOR_INFO								JSON
	);        
	
	OPEN TEMP_CURSOR;	
	cloop: LOOP
		FETCH TEMP_CURSOR 
		INTO 
			CUR_DISPOSER_ORDER_ID,
			CUR_DISPOSER_ORDER_CODE,
			CUR_DISPOSER_SITE_ID,
			CUR_DISPOSER_SITE_SI_DO,
			CUR_DISPOSER_SITE_SI_GUN_GU,
			CUR_DISPOSER_SITE_EUP_MYEON_DONG,
			CUR_DISPOSER_SITE_DONG_RI,
			CUR_DISPOSER_SITE_ADDR,
			CUR_STATE,
			CUR_STATE_CODE,
			CUR_NOTE,
			CUR_B_CODE,
			CUR_WSTE_DISPOSED_SI_DO,
			CUR_WSTE_DISPOSED_SI_GUN_GU,
			CUR_WSTE_DISPOSED_EUP_MYEON_DONG,
			CUR_WSTE_DISPOSED_DONG_RI,
			CUR_WSTE_DISPOSED_KIKCD_B_CODE,
			CUR_WSTE_DISPOSED_ADDR,
			CUR_DISPOSER_CREATED_AT,
            CUR_DISPOSER_CLOSE_AT,
			CUR_STATE_CATEGORY_CODE,
            CUR_TRANSACTION_ID;     
		
		SET vRowCount = vRowCount + 1;
		IF endOfRow THEN
			LEAVE cloop;
		END IF;
		
		INSERT INTO 
		CURRENT_STATE(
			DISPOSER_ORDER_ID, 
			DISPOSER_ORDER_CODE, 
			DISPOSER_SITE_ID, 
			DISPOSER_SITE_SI_DO,
			DISPOSER_SITE_SI_GUN_GU,
			DISPOSER_SITE_EUP_MYEON_DONG,
			DISPOSER_SITE_DONG_RI,
			DISPOSER_SITE_ADDR,
			STATE, 
			STATE_CODE,
			NOTE, 
			DISPOSER_SITE_KIKCD_B_CODE,
            WSTE_DISPOSED_SI_DO,
            WSTE_DISPOSED_SI_GUN_GU,
            WSTE_DISPOSED_EUP_MYEON_DONG,
            WSTE_DISPOSED_DONG_RI,
            WSTE_DISPOSED_KIKCD_B_CODE,
            WSTE_DISPOSED_ADDR,
            DISPOSER_CREATED_AT,
            DISPOSER_CLOSE_AT,
            STATE_CATEGORY_CODE,
            TRANSACTION_ID
		)
		VALUES(
			CUR_DISPOSER_ORDER_ID, 
			CUR_DISPOSER_ORDER_CODE, 
			CUR_DISPOSER_SITE_ID,
			CUR_DISPOSER_SITE_SI_DO,
			CUR_DISPOSER_SITE_SI_GUN_GU,
			CUR_DISPOSER_SITE_EUP_MYEON_DONG,
			CUR_DISPOSER_SITE_DONG_RI,
			CUR_DISPOSER_SITE_ADDR,
			CUR_STATE, 
			CUR_STATE_CODE,
			CUR_NOTE,
			CUR_B_CODE,
			CUR_WSTE_DISPOSED_SI_DO,
			CUR_WSTE_DISPOSED_SI_GUN_GU,
			CUR_WSTE_DISPOSED_EUP_MYEON_DONG,
			CUR_WSTE_DISPOSED_DONG_RI,
			CUR_WSTE_DISPOSED_KIKCD_B_CODE,
			CUR_WSTE_DISPOSED_ADDR,
			CUR_DISPOSER_CREATED_AT,
			CUR_DISPOSER_CLOSE_AT,
			CUR_STATE_CATEGORY_CODE,
			CUR_TRANSACTION_ID
		);
        
		SELECT JSON_ARRAYAGG(
			JSON_OBJECT(
				'ID'							, A.COLLECTOR_BIDDING_ID, 
                'COLLECTOR_SITE_ID'				, A.COLLECTOR_SITE_ID, 
                'COLLECTOR_SITE_NM'				, A.COLLECTOR_SITE_NAME, 
                'BIZ'							, A.TRMT_BIZ_NM, 
                'DIST'							, A.STRAIGHT_DISTANCE, 
                'STATE'							, A.STATE,
                'STATE_CODE'					, A.STATE_CODE,
                'DISPOSER_SITE_ID'				, A.DISPOSER_SITE_ID,
                'COLLECTOR_DATE_OF_VISIT'		, A.COLLECTOR_DATE_OF_VISIT,
                'COLLECTOR_DATE_OF_BIDDING'		, A.COLLECTOR_DATE_OF_BIDDING,
                'COLLECTOR_SELECTED_AT'			, A.COLLECTOR_SELECTED_AT,
                'COLLECTOR_MAKE_DECISION_AT'	, A.COLLECTOR_MAKE_DECISION_AT,
                'COLLECTOR_AVATAR_PATH'			, B.AVATAR_PATH,
                'COLLECTOR_MANAGER_ID'			, B.ID,
                'COLLECTOR_CONTACT'				, A.COLLECTOR_CONTACT,
                'COLLECTOR_MANAGER_PHONE'		, B.PHONE,
                'TRMT_BIZ_NM'					, A.TRMT_BIZ_NM,
                'BIDDING_RANK'					, A.BIDDING_RANK,
                'COLLECTOR_WINNER'				, A.COLLECTOR_WINNER,
                'TRANSACTION_ID'				, A.TRANSACTION_ID
			)
		) 
		INTO @COLLECTOR_INFO 
        FROM V_COLLECTOR_BIDDING_WITH_STATE A 
        INNER JOIN USERS B 
        ON A.COLLECTOR_SITE_ID = B.AFFILIATED_SITE
        WHERE 
            B.CLASS						= 201 AND
            B.ACTIVE					= TRUE AND
			A.DISPOSER_ORDER_ID 		= CUR_DISPOSER_ORDER_ID AND
            A.STATE_CATEGORY_ID			>= CUR_STATE_CATEGORY_CODE AND
            IF (CUR_STATE_CATEGORY_CODE = 4, 
				A.BIDDING_RANK <= 2 AND 
				(
					A.STATE_CODE 			= 236 OR 
					A.STATE_CODE 			= 245
				), 
				A.BIDDING_RANK >= 0 OR A.BIDDING_RANK IS NULL
			)
		ORDER BY A.BIDDING_RANK ASC;
		/*수거자정보를 JSON형태로 변환한다.*/
        
		SELECT JSON_ARRAYAGG(
			JSON_OBJECT(
				'WSTE_REG_ID'			, WSTE_REG_ID, 
                'DISPOSAL_ORDER_ID'		, DISPOSAL_ORDER_ID, 
                'WSTE_CLASS'			, WSTE_CLASS, 
                'WSTE_CLASS_NM'			, WSTE_CLASS_NM, 
                'WSTE_APPEARANCE_NM'	, WSTE_APPEARANCE_NM, 
                'WSTE_QUANTITY'			, WSTE_QUANTITY, 
                'WSTE_UNIT'				, WSTE_UNIT
			)
		) 
		INTO @DISPOSAL_WSTE_LIST 
        FROM V_WSTE_DISCHARGED_FROM_SITE
        WHERE DISPOSAL_ORDER_ID 		= CUR_DISPOSER_ORDER_ID;
        
		SELECT JSON_ARRAYAGG(
			JSON_OBJECT(
				'FILE_NAME'			, FILE_NAME, 
                'IMG_PATH'			, IMG_PATH, 
                'FILE_SIZE'			, FILE_SIZE
			)
		) 
		INTO @IMG_LIST 
        FROM WSTE_REGISTRATION_PHOTO  
        WHERE DISPOSAL_ORDER_ID 		= CUR_DISPOSER_ORDER_ID;
		
        SELECT 
        CASE
			WHEN CUR_STATE_CATEGORY_CODE = 2
				THEN (
					SELECT 
						IF(VISIT_START_AT IS NOT NULL, 
							IF(VISIT_START_AT <= NOW(), 
								VISIT_END_AT, 
								VISIT_START_AT
							),
							VISIT_END_AT
						) 
					FROM SITE_WSTE_DISPOSAL_ORDER 
					WHERE ID = CUR_DISPOSER_ORDER_ID
				)
			WHEN CUR_STATE_CATEGORY_CODE = 3
				THEN (
					SELECT BIDDING_END_AT
					FROM SITE_WSTE_DISPOSAL_ORDER 
					WHERE ID = CUR_DISPOSER_ORDER_ID
				)
			WHEN CUR_STATE_CATEGORY_CODE = 4
				THEN (
					SELECT 
						IF(MAX_SELECT_AT <= NOW(), 
							IF(BIDDERS > 1,
								MAX_SELECT2_AT,
                                MAX_SELECT_AT
							),
							MAX_SELECT_AT
						) 
					FROM SITE_WSTE_DISPOSAL_ORDER 
					WHERE ID = CUR_DISPOSER_ORDER_ID
				)
			WHEN CUR_STATE_CATEGORY_CODE = 5
				THEN (
					SELECT 
						IF(A.COLLECT_ASK_END_AT <= NOW(), 
							B.CLOSE_AT,
							A.COLLECT_ASK_END_AT
						) 
					FROM WSTE_CLCT_TRMT_TRANSACTION A LEFT JOIN SITE_WSTE_DISPOSAL_ORDER B ON A.DISPOSAL_ORDER_ID = B.ID
					WHERE A.ID = CUR_DISPOSER_ORDER_ID
				)
			WHEN CUR_STATE_CATEGORY_CODE = 6
				THEN CUR_DISPOSER_CLOSE_AT
            ELSE NULL
        END INTO @DISPLAY_DATE;
		
        
		UPDATE CURRENT_STATE 
        SET 
			COLLECTOR_INFO 				= @COLLECTOR_INFO, 
			DISPOSAL_WSTE_LIST 			= @DISPOSAL_WSTE_LIST, 
			IMG_LIST		 			= @IMG_LIST ,
            DISPLAY_DATE				= @DISPLAY_DATE
        WHERE DISPOSER_ORDER_ID 		= CUR_DISPOSER_ORDER_ID;
		/*위에서 받아온 JSON 타입 데이타를 비롯한 몇가지의 데이타를 NEW_COMING 테이블에 반영한다.*/
		
	END LOOP;   
	CLOSE TEMP_CURSOR;
	
	SELECT JSON_ARRAYAGG(
		JSON_OBJECT(
			'DISPOSER_ORDER_ID'						, DISPOSER_ORDER_ID, 
            'DISPOSER_ORDER_CODE'					, DISPOSER_ORDER_CODE, 
            'DISPOSER_SITE_ID'						, DISPOSER_SITE_ID, 
            'DISPOSER_SITE_SI_DO'					, DISPOSER_SITE_SI_DO, 
            'DISPOSER_SITE_SI_GUN_GU'				, DISPOSER_SITE_SI_GUN_GU, 
            'DISPOSER_SITE_EUP_MYEON_DONG'			, DISPOSER_SITE_EUP_MYEON_DONG, 
            'DISPOSER_SITE_DONG_RI'					, DISPOSER_SITE_DONG_RI, 
            'DISPOSER_SITE_ADDR'					, DISPOSER_SITE_ADDR, 
            'DISPLAY_DATE'							, DISPLAY_DATE,
            'STATE'									, STATE, 
            'STATE_CODE'							, STATE_CODE, 
            'NOTE'									, NOTE, 
            'DISPOSER_SITE_KIKCD_B_CODE'			, DISPOSER_SITE_KIKCD_B_CODE, 
            'WSTE_DISPOSED_SI_DO'					, WSTE_DISPOSED_SI_DO, 
            'WSTE_DISPOSED_SI_GUN_GU'				, WSTE_DISPOSED_SI_GUN_GU, 
            'WSTE_DISPOSED_EUP_MYEON_DONG'			, WSTE_DISPOSED_EUP_MYEON_DONG, 
            'WSTE_DISPOSED_DONG_RI'					, WSTE_DISPOSED_DONG_RI, 
            'WSTE_DISPOSED_KIKCD_B_CODE'			, WSTE_DISPOSED_KIKCD_B_CODE, 
            'WSTE_DISPOSED_ADDR'					, WSTE_DISPOSED_ADDR, 
            'DISPOSER_CREATED_AT'					, DISPOSER_CREATED_AT, 
            'STATE_CATEGORY_CODE'					, STATE_CATEGORY_CODE, 
            'TRANSACTION_ID'						, TRANSACTION_ID, 
            'DISPOSAL_WSTE_LIST'					, DISPOSAL_WSTE_LIST, 
            'IMG_LIST'								, IMG_LIST, 
            'COLLECTOR_INFO'						, COLLECTOR_INFO
		)
	) 
    INTO @json_data FROM CURRENT_STATE;
    
    IF vRowCount = 0 THEN
		SET @rtn_val 					= 27901;
		SET @msg_txt 					= 'No data found';
		SIGNAL SQLSTATE '23000';
    ELSE
		SET @rtn_val 					= 0;
		SET @msg_txt 					= 'Success';
    END IF;
    COMMIT;   
	DROP TABLE IF EXISTS CURRENT_STATE;
	CALL sp_return_results(@rtn_val, @msg_txt, @json_data);    
END