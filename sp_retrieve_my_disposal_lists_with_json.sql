CREATE DEFINER=`chiumdb`@`%` PROCEDURE `sp_retrieve_my_disposal_lists_with_json`(
	IN IN_USER_ID							BIGINT,
    IN IN_USER_TYPE							VARCHAR(20),
    OUT rtn_val								INT,
    OUT msg_txt								VARCHAR(200),
    OUT json_data							JSON
)
BEGIN

/*
Procedure Name 	: sp_retrieve_my_disposal_lists_with_json
Input param 	: 2개
Output param 	: 3개
Job 			: 배출자 메인 페이지 로딩시 필요한 자료 반환.
Update 			: 2022.02.17
Version			: 0.0.1
AUTHOR 			: Leo Nam
*/

    DECLARE vRowCount 								INT DEFAULT 0;
    DECLARE endOfRow 								TINYINT DEFAULT FALSE;    
    DECLARE CUR_DISPOSER_ORDER_ID					BIGINT;
    DECLARE CUR_DISPOSER_ORDER_CODE					VARCHAR(10);  
    DECLARE CUR_DISPOSER_SITE_ID					BIGINT;
    
    DECLARE CUR_DISPOSER_VISIT_START_AT				DATETIME;
    DECLARE CUR_DISPOSER_VISIT_END_AT				DATETIME;
    DECLARE CUR_DISPOSER_BIDDING_END_AT				DATETIME;
    DECLARE CUR_DISPOSER_OPEN_AT					DATETIME;
    DECLARE CUR_DISPOSER_CLOSE_AT					DATETIME;
    DECLARE CUR_DISPOSER_SERVICE_INSTRUCTION_ID		BIGINT;
    DECLARE CUR_DISPOSER_VISIT_EARLY_CLOSING		TINYINT;
    DECLARE CUR_DISPOSER_VISIT_EARLY_CLOSED_AT		DATETIME;
    DECLARE CUR_DISPOSER_BIDDING_EARLY_CLOSING		TINYINT;
    DECLARE CUR_DISPOSER_BIDDING_EARLY_CLOSED_AT	DATETIME;
    DECLARE CUR_DISPOSER_CREATED_AT					DATETIME;
    DECLARE CUR_DISPOSER_UPDATED_AT					DATETIME;
    
    DECLARE CUR_STATE								VARCHAR(20);
    DECLARE CUR_STATE_CODE							INT;
    DECLARE CUR_STATE_CATEGORY_ID					INT;
    DECLARE CUR_STATE_CATEGORY						VARCHAR(45);
    DECLARE CUR_PROSPECTIVE_VISITORS				INT;
    DECLARE CUR_BIDDERS								INT;
    DECLARE CUR_NOTE								VARCHAR(255);
    DECLARE TEMP_CURSOR		 						CURSOR FOR 
	SELECT 
		DISPOSER_ORDER_ID, 
        DISPOSER_ORDER_CODE, 
        DISPOSER_SITE_ID,
        
        DISPOSER_VISIT_START_AT,
        DISPOSER_VISIT_END_AT,
        DISPOSER_BIDDING_END_AT,
        DISPOSER_OPEN_AT,
        DISPOSER_CLOSE_AT,
        DISPOSER_SERVICE_INSTRUCTION_ID,
        DISPOSER_VISIT_EARLY_CLOSING,
        DISPOSER_VISIT_EARLY_CLOSED_AT,
        DISPOSER_BIDDING_EARLY_CLOSING,
        DISPOSER_BIDDING_EARLY_CLOSED_AT,
        DISPOSER_CREATED_AT,
        DISPOSER_UPDATED_AT,
        STATE, 
        STATE_CODE, 
        STATE_CATEGORY_ID, 
        STATE_CATEGORY, 
        PROSPECTIVE_VISITORS, 
        BIDDERS, 
        NOTE
    FROM V_SITE_WSTE_DISPOSAL_ORDER_WITH_STATE
	WHERE 
		STATE IS NOT NULL AND 
        DISPOSER_ORDER_DELETED = FALSE AND
        IF (IN_USER_TYPE = 'Person',
			(DISPOSER_ID = IN_USER_ID),            
			(DISPOSER_SITE_ID IS NOT NULL AND DISPOSER_SITE_ID IN (SELECT AFFILIATED_SITE FROM USERS WHERE ID = IN_USER_ID AND ACTIVE = TRUE)));
            
            
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET endOfRow = TRUE;
    
	CREATE TEMPORARY TABLE IF NOT EXISTS DISPOSAL_ORDER_LIST (
		DISPOSER_ORDER_ID					BIGINT,
		DISPOSER_ORDER_CODE					VARCHAR(10),
		DISPOSER_SITE_ID					BIGINT,
    
		DISPOSER_VISIT_START_AT				DATETIME,
		DISPOSER_VISIT_END_AT				DATETIME,
		DISPOSER_BIDDING_END_AT				DATETIME,
		DISPOSER_OPEN_AT					DATETIME,
		DISPOSER_CLOSE_AT					DATETIME,
		DISPOSER_SERVICE_INSTRUCTION_ID		BIGINT,
		DISPOSER_VISIT_EARLY_CLOSING		TINYINT,
		DISPOSER_VISIT_EARLY_CLOSED_AT		DATETIME,
		DISPOSER_BIDDING_EARLY_CLOSING		TINYINT,
		DISPOSER_BIDDING_EARLY_CLOSED_AT	DATETIME,
		DISPOSER_CREATED_AT					DATETIME,
		DISPOSER_UPDATED_AT					DATETIME,
    
		STATE								VARCHAR(20),
		STATE_CODE							INT,
		STATE_CATEGORY_ID					INT,
		STATE_CATEGORY						VARCHAR(45),
		PROSPECTIVE_VISITORS				INT,
		BIDDERS								INT,
		NOTE								VARCHAR(255),
		IMG_PATH							JSON,
		WSTE_LIST							JSON,
		BIDDING_LIST						JSON
	);        
	
	OPEN TEMP_CURSOR;	
	cloop: LOOP
		FETCH TEMP_CURSOR 
		INTO 
			CUR_DISPOSER_ORDER_ID,
			CUR_DISPOSER_ORDER_CODE,
			CUR_DISPOSER_SITE_ID,
    
			CUR_DISPOSER_VISIT_START_AT,
			CUR_DISPOSER_VISIT_END_AT,
			CUR_DISPOSER_BIDDING_END_AT,
			CUR_DISPOSER_OPEN_AT,
			CUR_DISPOSER_CLOSE_AT,
			CUR_DISPOSER_SERVICE_INSTRUCTION_ID,
			CUR_DISPOSER_VISIT_EARLY_CLOSING,
			CUR_DISPOSER_VISIT_EARLY_CLOSED_AT,
			CUR_DISPOSER_BIDDING_EARLY_CLOSING,
			CUR_DISPOSER_BIDDING_EARLY_CLOSED_AT,
			CUR_DISPOSER_CREATED_AT,
			CUR_DISPOSER_UPDATED_AT,
    
			CUR_STATE,
			CUR_STATE_CODE,   
			CUR_STATE_CATEGORY_ID,
			CUR_STATE_CATEGORY,
			CUR_PROSPECTIVE_VISITORS,
			CUR_BIDDERS,
			CUR_NOTE;
		
		SET vRowCount = vRowCount + 1;
		IF endOfRow THEN
			LEAVE cloop;
		END IF;
		
		INSERT INTO 
		DISPOSAL_ORDER_LIST(
			DISPOSER_ORDER_ID, 
			DISPOSER_ORDER_CODE, 
			DISPOSER_SITE_ID, 
    
			DISPOSER_VISIT_START_AT,
			DISPOSER_VISIT_END_AT,
			DISPOSER_BIDDING_END_AT,
			DISPOSER_OPEN_AT,
			DISPOSER_CLOSE_AT,
			DISPOSER_SERVICE_INSTRUCTION_ID,
			DISPOSER_VISIT_EARLY_CLOSING,
			DISPOSER_VISIT_EARLY_CLOSED_AT,
			DISPOSER_BIDDING_EARLY_CLOSING,
			DISPOSER_BIDDING_EARLY_CLOSED_AT,
			DISPOSER_CREATED_AT,
			DISPOSER_UPDATED_AT,
        
			STATE, 
			STATE_CODE, 
			STATE_CATEGORY_ID, 
			STATE_CATEGORY, 
			PROSPECTIVE_VISITORS, 
			BIDDERS, 
			NOTE
		)
		VALUES(
			CUR_DISPOSER_ORDER_ID, 
			CUR_DISPOSER_ORDER_CODE, 
			CUR_DISPOSER_SITE_ID, 
    
			CUR_DISPOSER_VISIT_START_AT,
			CUR_DISPOSER_VISIT_END_AT,
			CUR_DISPOSER_BIDDING_END_AT,
			CUR_DISPOSER_OPEN_AT,
			CUR_DISPOSER_CLOSE_AT,
			CUR_DISPOSER_SERVICE_INSTRUCTION_ID,
			CUR_DISPOSER_VISIT_EARLY_CLOSING,
			CUR_DISPOSER_VISIT_EARLY_CLOSED_AT,
			CUR_DISPOSER_BIDDING_EARLY_CLOSING,
			CUR_DISPOSER_BIDDING_EARLY_CLOSED_AT,
			CUR_DISPOSER_CREATED_AT,
			CUR_DISPOSER_UPDATED_AT,
            
			CUR_STATE, 
			CUR_STATE_CODE, 
			CUR_STATE_CATEGORY_ID, 
			CUR_STATE_CATEGORY, 
			CUR_PROSPECTIVE_VISITORS, 
			CUR_BIDDERS, 
			CUR_NOTE
		);
        
		SELECT JSON_ARRAYAGG(
			JSON_OBJECT(
				'ID'				, WSTE_REG_ID, 
				'WSTE_NM'			, WSTE_CLASS_NM, 
                'APR'				, WSTE_APPEARANCE_NM, 
                'QTY'				, WSTE_QUANTITY, 
                'UNIT'				, WSTE_UNIT,
                'UPDATED_AT'		, WSTE_DISCHARGED_UPDATED_AT
			)
		) 
        INTO @WSTE_LIST 
        FROM V_WSTE_DISCHARGED_FROM_SITE 
        WHERE DISPOSAL_ORDER_ID = CUR_DISPOSER_ORDER_ID;
		
		SELECT JSON_ARRAYAGG(
			JSON_OBJECT(
				'ID'				, ID, 
                'PATH'				, IMG_PATH
			)
		) 
        INTO @IMG_PATH 
        FROM WSTE_REGISTRATION_PHOTO 
        WHERE 
			DISPOSAL_ORDER_ID 		= CUR_DISPOSER_ORDER_ID AND 
            CLASS_CODE 				= '입찰';
		/*DISPOSAL_ORDER_ID에 해당하는 이미지에 대한 저장경로를 JSON 형태로 받아온다.*/
		
		SELECT JSON_ARRAYAGG(
			JSON_OBJECT(
				'COLLECTOR_BIDDING_ID'			, COLLECTOR_BIDDING_ID, 
				'COLLECTOR_SITE_ID'				, COLLECTOR_SITE_ID, 
                'COLLECTOR_SI_DO'				, COLLECTOR_SI_DO, 
                'COLLECTOR_SI_GUN_GU'			, COLLECTOR_SI_GUN_GU, 
                'COLLECTOR_STATE'				, STATE, 
                'COLLECTOR_STATE_CODE'			, STATE_CODE, 
                'COLLECTOR_LAT'					, COLLECTOR_LAT, 
                'COLLECTOR_LNG'					, COLLECTOR_LNG, 
                'COLLECTOR_SITE_NAME'			, COLLECTOR_SITE_NAME, 
                'COLLECTOR_TRMT_BIZ_CODE'		, COLLECTOR_TRMT_BIZ_CODE, 
                'COLLECTOR_TRMT_BIZ_NM'			, TRMT_BIZ_NM, 
                'COLLECTOR_BID_AMOUNT'			, COLLECTOR_BID_AMOUNT, 
                'COLLECTOR_GREENHOUSE_GAS'		, COLLECTOR_GREENHOUSE_GAS, 
                'COLLECTOR_WINNER'				, COLLECTOR_WINNER, 
                'COLLECTOR_ACTIVE'				, COLLECTOR_ACTIVE, 
                'COLLECTOR_CANCEL_VISIT'		, COLLECTOR_CANCEL_VISIT, 
                'COLLECTOR_CANCEL_BIDDING'		, COLLECTOR_CANCEL_BIDDING, 
                'COLLECTOR_DATE_OF_VISIT'		, COLLECTOR_DATE_OF_VISIT, 
                'COLLECTOR_DATE_OF_BIDDING'		, COLLECTOR_DATE_OF_BIDDING, 
                'COLLECTOR_SELECTED'			, COLLECTOR_SELECTED, 
                'COLLECTOR_SELECTED_AT'			, COLLECTOR_SELECTED_AT, 
                'COLLECTOR_MAKE_DECISION'		, COLLECTOR_MAKE_DECISION, 
                'COLLECTOR_MAKE_DECISION_AT'	, COLLECTOR_MAKE_DECISION_AT, 
                'DISPOSER_RESPONSE_VISIT'		, DISPOSER_RESPONSE_VISIT, 
                'DISPOSER_RESPONSE_VISIT_AT'	, DISPOSER_RESPONSE_VISIT_AT,
                'DISPOSER_REJECT_BIDDING'		, DISPOSER_REJECT_BIDDING, 
                'DISPOSER_REJECT_BIDDING_AT'	, DISPOSER_REJECT_BIDDING_AT, 
                'COLLECTOR_STATE_CATEGORY_ID'	, STATE_CATEGORY_ID, 
                'COLLECTOR_STATE_CATEGORY'		, STATE_CATEGORY
			)
		) 
        INTO @BIDDING_LIST 
        FROM V_COLLECTOR_BIDDING_WITH_STATE
        WHERE 
			DISPOSER_ORDER_ID 		= CUR_DISPOSER_ORDER_ID AND 
            STATE_CATEGORY_ID 		>= CUR_STATE_CATEGORY_ID - 1 AND
            STATE_PID				<> 211 AND
            STATE_CODE				<> 211;
		
		UPDATE DISPOSAL_ORDER_LIST 
        SET 
			IMG_PATH 				= @IMG_PATH, 
            WSTE_LIST 				= @WSTE_LIST, 
            BIDDING_LIST 			= @BIDDING_LIST 
		WHERE DISPOSER_ORDER_ID 	= CUR_DISPOSER_ORDER_ID;
		/*위에서 받아온 JSON 타입 데이타를 비롯한 몇가지의 데이타를 NEW_COMING 테이블에 반영한다.*/
		
		
	END LOOP;   
	CLOSE TEMP_CURSOR;
	
	SELECT JSON_ARRAYAGG(
		JSON_OBJECT(
			'DISPOSER_ORDER_ID'					, DISPOSER_ORDER_ID, 
            'DISPOSER_ORDER_CODE'				, DISPOSER_ORDER_CODE, 
            'DISPOSER_SITE_ID'					, DISPOSER_SITE_ID, 
            
            'DISPOSER_VISIT_START_AT'			, DISPOSER_VISIT_START_AT, 
            'DISPOSER_VISIT_END_AT'				, DISPOSER_VISIT_END_AT, 
            'DISPOSER_BIDDING_END_AT'			, DISPOSER_BIDDING_END_AT, 
            'DISPOSER_OPEN_AT'					, DISPOSER_OPEN_AT, 
            'DISPOSER_CLOSE_AT'					, DISPOSER_CLOSE_AT, 
            'DISPOSER_SERVICE_INSTRUCTION_ID'	, DISPOSER_SERVICE_INSTRUCTION_ID, 
            'DISPOSER_VISIT_EARLY_CLOSING'		, DISPOSER_VISIT_EARLY_CLOSING, 
            'DISPOSER_VISIT_EARLY_CLOSED_AT'	, DISPOSER_VISIT_EARLY_CLOSED_AT, 
            'DISPOSER_BIDDING_EARLY_CLOSING'	, DISPOSER_BIDDING_EARLY_CLOSING, 
            'DISPOSER_BIDDING_EARLY_CLOSED_AT'	, DISPOSER_BIDDING_EARLY_CLOSED_AT, 
            'DISPOSER_CREATED_AT'				, DISPOSER_CREATED_AT, 
            'DISPOSER_UPDATED_AT'				, DISPOSER_UPDATED_AT, 
            
            'STATE'								, STATE, 
            'STATE_CODE'						, STATE_CODE, 
            'STATE_CATEGORY_ID'					, STATE_CATEGORY_ID, 
            'STATE_CATEGORY'					, STATE_CATEGORY, 
            'PROSPECTIVE_VISITORS'				, PROSPECTIVE_VISITORS, 
            'BIDDERS'							, BIDDERS, 
            'NOTE'								, NOTE, 
            'IMG_PATH'							, IMG_PATH, 
            'WSTE_LIST'							, WSTE_LIST, 
            'BIDDING_LIST'						, BIDDING_LIST
		)
	) 
    INTO json_data 
    FROM DISPOSAL_ORDER_LIST;
    
	SELECT COUNT(DISPOSER_ORDER_ID) INTO @rtn_count
    FROM V_SITE_WSTE_DISPOSAL_ORDER_WITH_STATE
	WHERE 
		STATE IS NOT NULL AND 
        DISPOSER_ORDER_DELETED = FALSE AND
        IF (IN_USER_TYPE = 'Person',
			(DISPOSER_ID = IN_USER_ID),            
			(DISPOSER_SITE_ID IS NOT NULL AND DISPOSER_SITE_ID IN (SELECT AFFILIATED_SITE FROM USERS WHERE ID = IN_USER_ID AND ACTIVE = TRUE)));
    
    IF @rtn_count = 0 THEN
		SET json_data 				= NULL;
		SET rtn_val 				= 30601;
		SET msg_txt 				= 'No data found';
    ELSE
		SET rtn_val 				= 0;
		SET msg_txt 				= 'Success';
    END IF;
	DROP TABLE IF EXISTS DISPOSAL_ORDER_LIST;
END