CREATE DEFINER=`chiumdb`@`%` PROCEDURE `sp_admin_retrive_site_lists_without_handler`(
	IN IN_SERARCH						VARCHAR(255),
    IN IN_OFFSET_SIZE					INT,
    IN IN_PAGE_SIZE						INT,
    IN IN_CONFIRMED						TINYINT,
    OUT OUT_LISTS						JSON
)
BEGIN

/*
Procedure Name 	: sp_admin_retrive_site_lists_without_handler
Input param 	: 3개
Job 			: 사이트의 리스트를 반환한다.
Update 			: 2022.04.28
Version			: 0.0.1
AUTHOR 			: Leo Nam
*/

    DECLARE vRowCount 							INT DEFAULT 0;
    DECLARE endOfRow 							TINYINT DEFAULT FALSE;    
    DECLARE CUR_SITE_ID							BIGINT;   
    DECLARE CUR_CREATED_AT						DATETIME;  
    DECLARE CUR_SITE_NAME						VARCHAR(255);   
    DECLARE CUR_PERMIT_REG_CODE					VARCHAR(12);  
    DECLARE CUR_B_CODE							VARCHAR(10); 
    DECLARE CUR_ADDR							VARCHAR(255);
    DECLARE CUR_PERMIT_REG_IMG_PATH				VARCHAR(255);
    DECLARE CUR_BIZ_REG_IMG_PATH				VARCHAR(255);
    DECLARE CUR_SITE_ACTIVE						TINYINT;
    DECLARE TEMP_CURSOR		 					CURSOR FOR 
	SELECT 
		A.ID, 
        A.CREATED_AT,
        A.SITE_NAME,
        A.PERMIT_REG_CODE,
        A.KIKCD_B_CODE,
        A.ADDR,
        A.PERMIT_REG_IMG_PATH
    FROM COMP_SITE A
    LEFT JOIN COMPANY B ON A.COMP_ID = B.ID
    LEFT JOIN KIKCD_B C ON A.KIKCD_B_CODE = C.B_CODE
    LEFT JOIN KIKCD_B D ON B.KIKCD_B_CODE = D.B_CODE
    LEFT JOIN WSTE_TRMT_BIZ E ON A.TRMT_BIZ_CODE = E.CODE
    WHERE 
		IF(IN_SEARCH IS NULL,
			IF(IN_CONFIRMED IS NULL,
				A.ID > 0,
				(
					A.CONFIRMED = IN_CONFIRMED OR
                    B.CONFIRMED = IN_CONFIRMED 
                )
			),
			IF(IN_CONFIRMED IS NULL,
				A.ID > 0 AND
                (
					A.SITE_NAME LIKE '%IN_SEARCH%' OR
					B.REP_NAME LIKE '%IN_SEARCH%' OR
					C.B_CODE LIKE '%IN_SEARCH%' OR
					C.SI_DO LIKE '%IN_SEARCH%' OR
					C.SI_GUN_GU LIKE '%IN_SEARCH%' OR
					C.EUP_MYEON_DONG LIKE '%IN_SEARCH%' OR
					C.DONG_RI LIKE '%IN_SEARCH%' OR
					D.B_CODE LIKE '%IN_SEARCH%' OR
					D.SI_DO LIKE '%IN_SEARCH%' OR
					D.SI_GUN_GU LIKE '%IN_SEARCH%' OR
					D.EUP_MYEON_DONG LIKE '%IN_SEARCH%' OR
					A.ID IN (SELECT AFFILIATED_SITE FROM USERS WHERE USER_NAME LIKE '%IN_SEARCH%') OR
					E.NAME LIKE '%IN_SEARCH%' OR
					REPLACE(B.BIZ_REG_CODE, '-', '') LIKE '%IN_SEARCH%' OR
					REPLACE(A.PERMIT_REG_CODE, '-', '') LIKE '%IN_SEARCH%'
                ),
				(
					A.CONFIRMED = IN_CONFIRMED OR
                    B.CONFIRMED = IN_CONFIRMED 
                )
			)
        )
    LIMIT IN_OFFSET_SIZE, IN_PAGE_SIZE;   
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET endOfRow = TRUE;
    
    SET OUT_LISTS = NULL;
	CREATE TEMPORARY TABLE IF NOT EXISTS ADMIN_RETRIEVE_SITE_LISTS_TEMP_2 (
		SITE_ID							BIGINT,
		CREATED_AT						DATETIME,
		SITE_NAME						VARCHAR(255),
		PERMIT_REG_CODE					VARCHAR(12),
		B_CODE							VARCHAR(10),
		ADDR							VARCHAR(255),
		PERMIT_REG_IMG_PATH				VARCHAR(255),
		BIZ_REG_IMG_PATH				VARCHAR(255),
		SITE_ACTIVE						TINYINT
	);        
	
	OPEN TEMP_CURSOR;	
	cloop: LOOP
		
		FETCH TEMP_CURSOR 
		INTO  
			CUR_SITE_ID,
			CUR_CREATED_AT,
			CUR_SITE_NAME,
			CUR_PERMIT_REG_CODE,
			CUR_B_CODE,
			CUR_ADDR,
			CUR_PERMIT_REG_IMG_PATH,
			CUR_BIZ_REG_IMG_PATH,
			CUR_SITE_ACTIVE;
		
		SET vRowCount = vRowCount + 1;
		IF endOfRow THEN
			LEAVE cloop;
		END IF;
		
		INSERT INTO 
		ADMIN_RETRIEVE_SITE_LISTS_TEMP_2(
			SITE_ID,
			CREATED_AT,
			SITE_NAME,
			ERMIT_REG_CODE,
			B_CODE,
			ADDR,
			PERMIT_REG_IMG_PATH,
			BIZ_REG_IMG_PATH,
			SITE_ACTIVE
		)
		VALUES(
			CUR_SITE_ID,
			CUR_CREATED_AT,
			CUR_SITE_NAME,
			CUR_PERMIT_REG_CODE,
			CUR_B_CODE,
			CUR_ADDR,
			CUR_PERMIT_REG_IMG_PATH,
			CUR_BIZ_REG_IMG_PATH,
			CUR_SITE_ACTIVE
		);
	END LOOP;   
	CLOSE TEMP_CURSOR;
	
	SELECT JSON_ARRAYAGG(JSON_OBJECT(
		'SITE_ID'					, SITE_ID, 
        'CREATED_AT'				, CREATED_AT, 
        'SITE_NAME'					, SITE_NAME, 
        'PERMIT_REG_CODE'			, ERMIT_REG_CODE, 
        'B_CODE'					, B_CODE, 
        'ADDR'						, ADDR, 
        'PERMIT_REG_IMG_PATH'		, PERMIT_REG_IMG_PATH, 
        'BIZ_REG_IMG_PATH'			, BIZ_REG_IMG_PATH, 
        'SITE_ACTIVE'				, SITE_ACTIVE
	)) 
    INTO OUT_LISTS FROM ADMIN_RETRIEVE_SITE_LISTS_TEMP_2;
    
	DROP TABLE IF EXISTS ADMIN_RETRIEVE_SITE_LISTS_TEMP_2;
END