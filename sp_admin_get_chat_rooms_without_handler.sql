CREATE DEFINER=`chiumdb`@`%` PROCEDURE `sp_admin_get_chat_rooms_without_handler`(
    IN IN_USER_ID					BIGINT,
    IN IN_USER_TYPE					INT,
    OUT OUT_ROOM_INFO				JSON
)
BEGIN

    DECLARE vRowCount 							INT DEFAULT 0;
    DECLARE endOfRow 							TINYINT DEFAULT FALSE;    
    DECLARE CUR_ROOM_ID							BIGINT;   
    DECLARE CUR_ORDER_ID						BIGINT; 
    DECLARE CUR_ORDER_CODE						VARCHAR(10);   
    DECLARE CUR_BIDDING_ID						BIGINT; 
    DECLARE CUR_DISPOSER_USER_ID				BIGINT; 
    DECLARE CUR_COLLECTOR_USER_ID				BIGINT; 
    DECLARE CUR_STATE_CODE						INT; 
    DECLARE CUR_DISPOSER_AVATAR_PATH			VARCHAR(255);  
    DECLARE CUR_COLLECTOR_AVATAR_PATH			VARCHAR(255);   
    DECLARE CUR_LAST_CHAT_ID					BIGINT;   
    DECLARE CUR_LAST_CHAT						VARCHAR(255);   
    DECLARE CUR_LAST_CHATTED_USER_ID			BIGINT;  
    DECLARE CUR_LAST_CHATTED_AT					DATETIME;   
    DECLARE CUR_LAST_CHAT_DELETED				TINYINT;    
    DECLARE CUR_LAST_CHAT_MEDIA					TINYINT;    
    DECLARE TEMP_CURSOR		 					CURSOR FOR 
	SELECT 
		A.ID, 
		A.ORDER_ID, 
		B.ORDER_CODE,
        A.BIDDING_ID,
        A.DISPOSER_USER_ID,
        A.COLLECTOR_USER_ID,
        C.STATE_CODE,
        D.AVATAR_PATH,
        E.AVATAR_PATH,
        A.LAST_CHAT_ID,
        A.LAST_CHAT,
        A.LAST_CHATTED_USER_ID,
        A.LAST_CHATTED_AT,
        A.LAST_CHAT_DELETED,
        A.LAST_CHAT_MEDIA
	FROM CHAT_ROOMS A
    LEFT JOIN SITE_WSTE_DISPOSAL_ORDER B ON A.ORDER_ID = B.ID
    LEFT JOIN V_ORDER_STATE C ON B.ID = C.DISPOSER_ORDER_ID
    LEFT JOIN USERS D ON A.DISPOSER_USER_ID = D.ID
    LEFT JOIN USERS E ON A.COLLECTOR_USER_ID = E.ID
	WHERE 
		C.STATE_CODE IN (102, 118) AND
        A.STATE = C.STATE_CODE AND
        IF(IN_USER_TYPE = 2,
			A.DISPOSER_USER_ID = IN_USER_ID,
            A.COLLECTOR_USER_ID = IN_USER_ID
        );
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET endOfRow = TRUE;
    
    SET OUT_ROOM_INFO = NULL;
	CREATE TEMPORARY TABLE IF NOT EXISTS ADMIN_GET_CHAT_ROOMS_WITHOUT_HANDLER_TEMP (
		ROOM_ID							BIGINT,
		ORDER_ID						BIGINT,
		ORDER_CODE						VARCHAR(10),
		BIDDING_ID						BIGINT,
		OPPONENT_USER_ID				BIGINT,
        STATE_CODE						INT,
		OPPONENT_AVATAR_PATH			VARCHAR(255),
        CHAT_ID							BIGINT,
        MESSAGE							VARCHAR(255),
        CREATED_AT						DATETIME,
        UNREAD							INT,
        SITE_NAME						VARCHAR(255)
	);        
	
	OPEN TEMP_CURSOR;	
	cloop: LOOP
		FETCH TEMP_CURSOR 
		INTO 
			CUR_ROOM_ID,
			CUR_ORDER_ID,
			CUR_ORDER_CODE,
			CUR_BIDDING_ID,
			CUR_DISPOSER_USER_ID,
			CUR_COLLECTOR_USER_ID,
			CUR_STATE_CODE,
			CUR_DISPOSER_AVATAR_PATH,
			CUR_COLLECTOR_AVATAR_PATH,
			CUR_LAST_CHAT_ID,
			CUR_LAST_CHAT,
			CUR_LAST_CHATTED_USER_ID,
			CUR_LAST_CHATTED_AT,
			CUR_LAST_CHAT_DELETED,
			CUR_LAST_CHAT_MEDIA;
		
		SET vRowCount = vRowCount + 1;
		IF endOfRow THEN
			LEAVE cloop;
		END IF;
		
        INSERT INTO ADMIN_GET_CHAT_ROOMS_WITHOUT_HANDLER_TEMP (
			ROOM_ID,
			ORDER_ID,
            ORDER_CODE,
            BIDDING_ID,
            OPPONENT_USER_ID,
            STATE_CODE,
            OPPONENT_AVATAR_PATH,
            CHAT_ID,
            MESSAGE,
            CREATED_AT
        ) VALUES (
			CUR_ROOM_ID,
			CUR_ORDER_ID,
			CUR_ORDER_CODE,
			CUR_BIDDING_ID,
			IF(IN_USER_TYPE = 2, CUR_COLLECTOR_USER_ID, CUR_DISPOSER_USER_ID),
			CUR_STATE_CODE,
			IF(IN_USER_TYPE = 2, CUR_COLLECTOR_AVATAR_PATH, CUR_DISPOSER_AVATAR_PATH),
            CUR_LAST_CHAT_ID,
            IF(CUR_LAST_CHAT_DELETED = TRUE, 
				'삭제된 메시지입니다.',
                IF(CUR_LAST_CHAT_MEDIA IS NOT NULL,
					IF(CUR_LAST_CHAT_MEDIA = 0, 
						CUR_LAST_CHAT,
						IF(CUR_LAST_CHAT_MEDIA = 1, 
							'이미지 자료입니다.', 
							'동영상 자료입니다.'
						)
					),
					NULL
				)
            ),
            CUR_LAST_CHATTED_AT
        );
            
		SELECT COUNT(ID) INTO @UNREAD
		FROM CHATS
		WHERE 
			ROOM_ID = CUR_ROOM_ID AND
			USER_ID <> IN_USER_ID AND
			IS_READ = FALSE;
        
		SELECT IF(A.AFFILIATED_SITE = 0, A.USER_NAME, B.SITE_NAME) INTO @SITE_NAME
		FROM USERS A
		LEFT JOIN COMP_SITE B ON A.AFFILIATED_SITE = B.ID
		WHERE A.ID = IF(IN_USER_TYPE = 2, CUR_COLLECTOR_USER_ID, CUR_DISPOSER_USER_ID);
        
        UPDATE ADMIN_GET_CHAT_ROOMS_WITHOUT_HANDLER_TEMP
        SET 
			UNREAD	 			= @UNREAD,
			SITE_NAME	 		= @SITE_NAME
        WHERE ROOM_ID 			= CUR_ROOM_ID;
	END LOOP;   
	CLOSE TEMP_CURSOR;
	
	SELECT JSON_ARRAYAGG(JSON_OBJECT(
		'ROOM_ID'					, ROOM_ID, 
		'ORDER_ID'					, ORDER_ID, 
        'ORDER_CODE'				, ORDER_CODE, 
        'BIDDING_ID'				, BIDDING_ID, 
        'OPPONENT_USER_ID'			, OPPONENT_USER_ID, 
        'OPPONENT_AVATAR_PATH'		, OPPONENT_AVATAR_PATH, 
        'CHAT_ID'					, CHAT_ID, 
        'MESSAGE'					, MESSAGE, 
        'CREATED_AT'				, CREATED_AT, 
        'UNREAD'					, UNREAD, 
        'SITE_NAME'					, SITE_NAME
	)) 
    INTO OUT_ROOM_INFO FROM ADMIN_GET_CHAT_ROOMS_WITHOUT_HANDLER_TEMP;   
	DROP TABLE IF EXISTS ADMIN_GET_CHAT_ROOMS_WITHOUT_HANDLER_TEMP;
END