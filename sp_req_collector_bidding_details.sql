CREATE DEFINER=`chiumdb`@`%` PROCEDURE `sp_req_collector_bidding_details`(
	IN IN_COLLECTOR_BIDDING_ID				BIGINT
)
BEGIN

/*
Procedure Name 	: sp_req_collector_bidding_details1
Input param 	: 1개
Job 			: 수거자의 개별 입찰건에 대한 상세정보 보기
Update 			: 2022.02.10
Version			: 0.0.2
AUTHOR 			: Leo Nam
*/

    DECLARE vRowCount 					INT DEFAULT 0;
    DECLARE endOfRow 					TINYINT DEFAULT FALSE;    
    DECLARE CUR_COLLECTOR_BIDDING_ID	BIGINT;
    DECLARE CUR_DISPOSER_ORDER_ID		BIGINT;
    DECLARE CUR_DISPOSER_ORDER_CODE		VARCHAR(10);
    DECLARE CUR_STATE					VARCHAR(20);
    DECLARE CUR_STATE_CODE				INT;
    DECLARE CUR_COLLECTOR_CATEGORY_ID	INT;
    DECLARE CUR_COLLECTOR_CATEGORY		VARCHAR(20);
    DECLARE TEMP_CURSOR		 			CURSOR FOR 
	SELECT 
		A.ID, 
        B.ID, 
        B.ORDER_CODE, 
        C.STATE, 
        C.STATE_CODE, 
        C.COLLECTOR_CATEGORY_ID, 
        C.COLLECTOR_CATEGORY
    FROM COLLECTOR_BIDDING A 
    LEFT JOIN SITE_WSTE_DISPOSAL_ORDER B ON A.DISPOSAL_ORDER_ID = B.ID
    LEFT JOIN V_BIDDING_STATE_NAME C ON A.ID = C.COLLECTOR_BIDDING_ID
	WHERE A.ID = IN_COLLECTOR_BIDDING_ID;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET endOfRow = TRUE;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		ROLLBACK;
		DROP TABLE IF EXISTS COLLECTOR_BIDDING_DETAILS_TEMP;
		SET @json_data 		= NULL;
		CALL sp_return_results(@rtn_val, @msg_txt, @json_data);
	END;        
	START TRANSACTION;				
    /*트랜잭션 시작*/  
    
	CREATE TEMPORARY TABLE IF NOT EXISTS COLLECTOR_BIDDING_DETAILS_TEMP (
		COLLECTOR_BIDDING_ID			BIGINT,
		DISPOSER_ORDER_ID				BIGINT,
		ORDER_CODE						VARCHAR(10),
		IMG_LIST						JSON,
		WSTE_BIDDING_LIST				JSON,
		WSTE_DISPOSAL_LIST				JSON,
		DISPOSER_ORDER_INFO				JSON,
		DISPOSER_WSTE_GEO_INFO			JSON,
		DISPOSER_INFO					JSON,
		DISPLAY_DATE					DATETIME,
		STATE							VARCHAR(20),
		STATE_CODE						INT,
		COLLECTOR_CATEGORY_ID			INT,
		COLLECTOR_CATEGORY				VARCHAR(20)
	);        
	
	OPEN TEMP_CURSOR;	
	cloop: LOOP
		FETCH TEMP_CURSOR 
		INTO 
			CUR_COLLECTOR_BIDDING_ID,
			CUR_DISPOSER_ORDER_ID,
			CUR_DISPOSER_ORDER_CODE,
			CUR_STATE,
			CUR_STATE_CODE,
			CUR_COLLECTOR_CATEGORY_ID,
			CUR_COLLECTOR_CATEGORY;   
		
		SET vRowCount = vRowCount + 1;
		IF endOfRow THEN
			LEAVE cloop;
		END IF;
		
		INSERT INTO 
		COLLECTOR_BIDDING_DETAILS_TEMP(
			COLLECTOR_BIDDING_ID, 
			DISPOSER_ORDER_ID, 
			ORDER_CODE, 
			STATE, 
			STATE_CODE, 
			COLLECTOR_CATEGORY_ID, 
			COLLECTOR_CATEGORY
		)
		VALUES(
			CUR_COLLECTOR_BIDDING_ID, 
			CUR_DISPOSER_ORDER_ID, 
			CUR_DISPOSER_ORDER_CODE, 
			CUR_STATE, 
			CUR_STATE_CODE, 
			CUR_COLLECTOR_CATEGORY_ID, 
			CUR_COLLECTOR_CATEGORY
		);
        
        CALL sp_get_collector_bidding_wste_lists_2(
			CUR_COLLECTOR_BIDDING_ID,
            @WSTE_BIDDING_LIST
        );
		/*DISPOSAL_ORDER_ID에 등록된 폐기물 종류 중 하나만 불러온다.*/
        
        CALL sp_get_disposal_wste_lists(
			CUR_DISPOSER_ORDER_ID,
            @WSTE_DISPOSAL_LIST
        );
		
        CALL sp_get_disposal_img_lists(
			CUR_DISPOSER_ORDER_ID,
            '입찰',
            @IMG_LIST
        );
            
		CALL sp_set_display_time_for_collector(
			CUR_DISPOSER_ORDER_ID,
			CUR_COLLECTOR_BIDDING_ID,
			CUR_COLLECTOR_CATEGORY_ID,
			@DISPLAY_DATE
		);
		
        CALL sp_get_disposal_order_info(
			CUR_DISPOSER_ORDER_ID,
            @DISPOSER_ORDER_INFO
        );
		
        CALL sp_get_disposer_wste_geo_info(
			CUR_DISPOSER_ORDER_ID,
            @DISPOSER_WSTE_GEO_INFO
        );	
		UPDATE COLLECTOR_BIDDING_DETAILS_TEMP 
        SET 
			DISPLAY_DATE 			= @DISPLAY_DATE, 
			IMG_LIST 				= @IMG_LIST, 
            WSTE_BIDDING_LIST 		= @WSTE_BIDDING_LIST, 
            WSTE_DISPOSAL_LIST 		= @WSTE_DISPOSAL_LIST, 
            DISPOSER_ORDER_INFO 	= @DISPOSER_ORDER_INFO , 
            DISPOSER_WSTE_GEO_INFO 	= @DISPOSER_WSTE_GEO_INFO
        WHERE DISPOSER_ORDER_ID = CUR_DISPOSER_ORDER_ID;
		/*위에서 받아온 JSON 타입 데이타를 비롯한 몇가지의 데이타를 NEW_COMING 테이블에 반영한다.*/
		
		SET @AAA = CUR_DISPOSER_ORDER_ID;
	END LOOP;   
	CLOSE TEMP_CURSOR;
	
	SELECT JSON_ARRAYAGG(JSON_OBJECT(
		'COLLECTOR_BIDDING_ID'		, COLLECTOR_BIDDING_ID, 
        'DISPOSER_ORDER_ID'			, DISPOSER_ORDER_ID, 
        'ORDER_CODE'				, ORDER_CODE, 
        'DISPLAY_DATE'				, DISPLAY_DATE, 
        'STATE'						, STATE, 
        'STATE_CODE'				, STATE_CODE, 
        'IMG_LIST'					, IMG_LIST, 
        'COLLECTOR_CATEGORY_ID'		, COLLECTOR_CATEGORY_ID, 
        'COLLECTOR_CATEGORY'		, COLLECTOR_CATEGORY, 
        'WSTE_BIDDING_LIST'			, WSTE_BIDDING_LIST, 
        'WSTE_DISPOSAL_LIST'		, WSTE_DISPOSAL_LIST, 
        'DISPOSER_ORDER_INFO'		, DISPOSER_ORDER_INFO, 
        'DISPOSER_WSTE_GEO_INFO'	, DISPOSER_WSTE_GEO_INFO
	)) 
    INTO @json_data 
    FROM COLLECTOR_BIDDING_DETAILS_TEMP;
    
    IF vRowCount = 0 THEN
		SET @rtn_val = 27901;
		SET @msg_txt = 'No data found';
		SIGNAL SQLSTATE '23000';
    ELSE
		SET @rtn_val = 0;
		SET @msg_txt = CONCAT('Success:', @AAA);
    END IF; 
    COMMIT;   
	DROP TABLE IF EXISTS COLLECTOR_BIDDING_DETAILS_TEMP;
	CALL sp_return_results(@rtn_val, @msg_txt, @json_data);   
END