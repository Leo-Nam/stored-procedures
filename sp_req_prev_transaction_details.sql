CREATE DEFINER=`chiumdb`@`%` PROCEDURE `sp_req_prev_transaction_details`(
	IN IN_USER_ID				BIGINT,				/*입력값 : 사용자 등록번호(USERS.ID)*/
	IN IN_COLLECTOR_SITE_ID		BIGINT				/*입력값 : 수거자 사이트 등록번호(COMP_SITE.ID)*/
)
BEGIN

/*
Procedure Name 	: sp_req_prev_transaction_site_lists
Input param 	: 2개
Job 			: 이전거래 이력이 있는 사이트를 반환한다.
Update 			: 2022.02.10
Version			: 0.0.3
AUTHOR 			: Leo Nam
*/

    DECLARE vRowCount 						INT DEFAULT 0;
    DECLARE endOfRow 						TINYINT DEFAULT FALSE;    
    DECLARE CUR_COLLECTOR_BIDDING_ID		BIGINT;
    DECLARE CUR_COLLECTOR_SITE_ID			BIGINT;
    DECLARE CUR_COLLECTOR_SITE_NM			VARCHAR(255);
    DECLARE CUR_DISPOSER_SI_DO				VARCHAR(20);
    DECLARE CUR_DISPOSER_SI_GUN_GU			VARCHAR(20);
    DECLARE CUR_DISPOSER_EUP_MYEON_DONG		VARCHAR(20);
    DECLARE CUR_DISPOSER_DONG_RI			VARCHAR(20);
    DECLARE CUR_DISPOSER_ADDR				VARCHAR(200);
    DECLARE TEMP_CURSOR		 				CURSOR FOR 
	SELECT 
		COLLECTOR_BIDDING_ID, 
		COLLECTOR_SITE_ID, 
        COLLECTOR_SITE_NM, 
        DISPOSER_SI_DO, 
        DISPOSER_SI_GUN_GU, 
        DISPOSER_EUP_MYEON_DONG, 
        DISPOSER_DONG_RI, 
        DISPOSER_ADDR
    FROM V_PREV_TRANSACTION_SITES
	WHERE 
		DISPOSER_SITE_ID IS NOT NULL AND 
        COLLECTOR_SITE_ID = IN_COLLECTOR_SITE_ID AND 
        DISPOSER_SITE_ID IN (SELECT AFFILIATED_SITE FROM USERS WHERE ID = IN_USER_ID AND ACTIVE = TRUE);
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET endOfRow = TRUE;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		ROLLBACK;
		DROP TABLE IF EXISTS CURRENT_STATE;
		SET @json_data 		= NULL;
		CALL sp_return_results(@rtn_val, @msg_txt, @json_data);
	END;        
	START TRANSACTION;				
    /*트랜잭션 시작*/  
    

	CREATE TEMPORARY TABLE IF NOT EXISTS CURRENT_STATE (
		COLLECTOR_BIDDING_ID			BIGINT,
		COLLECTOR_SITE_ID				BIGINT,
		COLLECTOR_SITE_NM				VARCHAR(255),
		DISPOSER_SI_DO					VARCHAR(20), 
		DISPOSER_SI_GUN_GU				VARCHAR(20), 
		DISPOSER_EUP_MYEON_DONG			VARCHAR(20), 
		DISPOSER_DONG_RI				VARCHAR(20), 
		DISPOSER_ADDR					VARCHAR(200),
		WSTE_LIST						JSON
	);        
	
	OPEN TEMP_CURSOR;	
	cloop: LOOP
		FETCH TEMP_CURSOR 
		INTO 
			CUR_COLLECTOR_BIDDING_ID,
			CUR_COLLECTOR_SITE_ID,
			CUR_COLLECTOR_SITE_NM,
			CUR_DISPOSER_SI_DO,
			CUR_DISPOSER_SI_GUN_GU,
			CUR_DISPOSER_EUP_MYEON_DONG,
			CUR_DISPOSER_DONG_RI,
			CUR_DISPOSER_ADDR;   
		
		SET vRowCount = vRowCount + 1;
		IF endOfRow THEN
			LEAVE cloop;
		END IF;
		
		INSERT INTO 
		CURRENT_STATE(
			COLLECTOR_BIDDING_ID,
			COLLECTOR_SITE_ID, 
			COLLECTOR_SITE_NM, 
			DISPOSER_SI_DO, 
			DISPOSER_SI_GUN_GU, 
			DISPOSER_EUP_MYEON_DONG, 
			DISPOSER_DONG_RI, 
			DISPOSER_ADDR
		)
		VALUES(
			CUR_COLLECTOR_BIDDING_ID,
			CUR_COLLECTOR_SITE_ID, 
			CUR_COLLECTOR_SITE_NM, 
			CUR_DISPOSER_SI_DO, 
			CUR_DISPOSER_SI_GUN_GU, 
			CUR_DISPOSER_EUP_MYEON_DONG, 
			CUR_DISPOSER_DONG_RI, 
			CUR_DISPOSER_ADDR
		);
		
		SELECT JSON_ARRAYAGG(
			JSON_OBJECT(
				'WSTE_NM'						, B.NAME, 
				'APPEARANCE'					, C.KOREAN, 
				'QTY'							, A.WSTE_QUANTITY, 
				'UNIT'							, A.WSTE_UNIT, 
				'UNIT_PRICE'					, A.PRICE_UNIT, 
				'CREATED_AT'					, A.CREATED_AT 
			)
		) 
		INTO @WSTE_LIST 
		FROM WSTE_CLCT_TRMT_TRANSACTION A 
        LEFT JOIN WSTE_CODE B ON A.WSTE_CODE = B.CODE
        LEFT JOIN WSTE_APPEARANCE C ON A.WSTE_APPEARANCE = C.ID
		WHERE A.COLLECTOR_BIDDING_ID = CUR_COLLECTOR_BIDDING_ID;
		/*처리된 폐기물 종류를 JSON형태로 변환한다.*/
		
		UPDATE CURRENT_STATE SET WSTE_LIST = @WSTE_LIST WHERE COLLECTOR_SITE_ID = CUR_COLLECTOR_SITE_ID;
		/*위에서 받아온 JSON 타입 데이타를 비롯한 몇가지의 데이타를 NEW_COMING 테이블에 반영한다.*/
		
		
	END LOOP;   
	CLOSE TEMP_CURSOR;
	
	IF vRowCount = 0 THEN
		SET @rtn_val = 29601;
		SET @msg_txt = 'No data found1';
		SET @json_data = NULL;
	ELSE
		SET @rtn_val = 0;
		SET @msg_txt = 'Success';	
		SELECT JSON_ARRAYAGG(
			JSON_OBJECT(
				'COLLECTOR_BIDDING_ID'		, COLLECTOR_BIDDING_ID, 
				'COLLECTOR_SITE_ID'			, COLLECTOR_SITE_ID, 
				'COLLECTOR_SITE_NM'			, COLLECTOR_SITE_NM, 
				'DISPOSER_SI_DO'			, DISPOSER_SI_DO, 
				'DISPOSER_SI_GUN_GU'		, DISPOSER_SI_GUN_GU, 
				'DISPOSER_EUP_MYEON_DONG'	, DISPOSER_EUP_MYEON_DONG, 
				'DISPOSER_DONG_RI'			, DISPOSER_DONG_RI, 
				'DISPOSER_ADDR'				, DISPOSER_ADDR, 
				'WSTE_LIST'					, WSTE_LIST
			)
		) 
		INTO @json_data 
		FROM CURRENT_STATE;
	END IF;
    COMMIT;   
	DROP TABLE IF EXISTS CURRENT_STATE;
	CALL sp_return_results(@rtn_val, @msg_txt, @json_data);  
END