CREATE DEFINER=`chiumdb`@`%` PROCEDURE `sp_push_disposer_write_review`(
	IN IN_USER_ID					BIGINT,
	IN IN_ORDER_ID					BIGINT,
	IN IN_SITE_ID					BIGINT,
    IN IN_CATEGORY_ID				INT,
    OUT OUT_TARGET_LIST				JSON,
    OUT rtn_val 					INT,				/*출력값 : 처리결과 반환값*/
    OUT msg_txt 					VARCHAR(200)		/*출력값 : 처리결과 문자열*/
)
BEGIN
	
    CALL sp_req_current_time(@REG_DT);
	SELECT IF(A.SITE_ID = 0, C.USER_NAME, B.SITE_NAME), A.ORDER_CODE
    INTO @DISPOSER_NAME, @ORDER_CODE
	FROM SITE_WSTE_DISPOSAL_ORDER A 
    LEFT JOIN COMP_SITE B ON A.SITE_ID = B.ID
    LEFT JOIN USERS C ON A.DISPOSER_ID = C.ID
	WHERE A.ID = IN_ORDER_ID;
    
	SELECT ID INTO @TRANSACTION_ID
	FROM WSTE_CLCT_TRMT_TRANSACTION
	WHERE 
		DISPOSAL_ORDER_ID = IN_ORDER_ID AND
		IN_PROGRESS = TRUE;  
		
	SET @TITLE = CONCAT('[', @ORDER_CODE, ']리뷰등록');
	SET @BODY = CONCAT('[', @DISPOSER_NAME, ']님이 리뷰를 등록했습니다.');
	SELECT JSON_ARRAYAGG(
		JSON_OBJECT(
			'USER_ID'				, ID, 
			'USER_NAME'				, USER_NAME, 
			'FCM'					, FCM, 
			'AVATAR_PATH'			, AVATAR_PATH,
			'TITLE'					, @TITLE,
			'BODY'					, @BODY,
			'ORDER_ID'				, IN_ORDER_ID, 
			'BIDDING_ID'			, NULL, 
			'TRANSACTION_ID'		, @TRANSACTION_ID, 
			'REPORT_ID'				, NULL, 
			'CATEGORY_ID'			, IN_CATEGORY_ID,
			'CREATED_AT'			, @REG_DT
		)
	) 
	INTO @PUSH_INFO
	FROM USERS
	WHERE 
		ACTIVE 					= TRUE AND
		PUSH_ENABLED			= TRUE AND
		AFFILIATED_SITE			= IN_SITE_ID;
        
	CALL sp_insert_push(
		IN_USER_ID,
		@PUSH_INFO,
		rtn_val,
		msg_txt
	);

	CREATE TEMPORARY TABLE IF NOT EXISTS PUSH_INFO_TEMP (
		PUSH_INFO						JSON
	);     
	INSERT PUSH_INFO_TEMP(PUSH_INFO) VALUES(@PUSH_INFO);
	SELECT JSON_ARRAYAGG(JSON_OBJECT(
		'PUSH_INFO'			, PUSH_INFO
	)) 
	INTO OUT_TARGET_LIST
	FROM PUSH_INFO_TEMP;  
	DROP TABLE IF EXISTS PUSH_INFO_TEMP;  
	SET rtn_val = 0;
	SET msg_txt = 'success1';
END