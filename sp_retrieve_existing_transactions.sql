CREATE DEFINER=`chiumdb`@`%` PROCEDURE `sp_retrieve_existing_transactions`(
	IN IN_USER_ID							BIGINT
)
BEGIN

/*
Procedure Name 	: sp_retrieve_existing_transactions
Input param 	: 2개
Job 			: 현재 처리중인 업체(거래내역)를 리스트한다.
Update 			: 2022.01.25
Version			: 0.0.1
AUTHOR 			: Leo Nam
*/

    DECLARE vRowCount 							INT 				DEFAULT 0;
    DECLARE endOfRow 							TINYINT 			DEFAULT FALSE;    
    DECLARE CUR_DISPOSER_ORDER_ID				BIGINT;
    DECLARE CUR_DISPOSER_ID						BIGINT;
    DECLARE CUR_COLLECTOR_ID					BIGINT;
    DECLARE CUR_COLLECTOR_BIDDING_ID			BIGINT;
    DECLARE CUR_OPEN_AT							DATETIME;
    DECLARE CUR_CLOSE_AT						DATETIME;
    DECLARE CUR_DISPOSER_SITE_ID				BIGINT;	
    DECLARE CUR_SUCCESS_BIDDER_ID				BIGINT;	
    DECLARE CUR_COLLECTOR_NAME					VARCHAR(255);
    DECLARE CUR_AVATAR_PATH						VARCHAR(255);
    DECLARE CUR_CONTRACT_TYPE					VARCHAR(20);	
    DECLARE TEMP_CURSOR		 					CURSOR FOR 
	SELECT 
		A.ID, 
		A.DISPOSER_ID, 
		A.COLLECTOR_ID, 
		A.COLLECTOR_BIDDING_ID, 
        A.OPEN_AT, 
        A.CLOSE_AT, 
        A.SITE_ID, 
        A.SUCCESS_BIDDER, 
        C.SITE_NAME, 
        B.AVATAR_PATH
    FROM SITE_WSTE_DISPOSAL_ORDER A
	JOIN USERS B ON IF(B.AFFILIATED_SITE = 0, A.DISPOSER_ID = B.ID, A.SITE_ID = B.AFFILIATED_SITE)
    JOIN COMP_SITE C ON A.SUCCESS_BIDDER = C.ID
	WHERE 
		B.ID = IN_USER_ID AND
        B.ACTIVE = TRUE AND
        A.CLOSE_AT > NOW();
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET endOfRow = TRUE;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		ROLLBACK;
		DROP TABLE IF EXISTS CURRENT_STATE;
		SET @json_data 		= NULL;
		CALL sp_return_results(@rtn_val, @msg_txt, @json_data);
	END;        
	START TRANSACTION;				
    /*트랜잭션 시작*/  
    
	CREATE TEMPORARY TABLE IF NOT EXISTS CURRENT_STATE (
		ID						BIGINT,
		DISPOSER_ID				BIGINT,
		COLLECTOR_BIDDING_ID	BIGINT,
		OPEN_AT					DATETIME,
		CLOSE_AT				DATETIME,
		DISPOSER_SITE_ID		BIGINT,
		SUCCESS_BIDDER_ID		BIGINT,
		COLLECTOR_NAME			VARCHAR(255),
		AVATAR_PATH				VARCHAR(255),
		CONTRACT_TYPE			VARCHAR(20),
		COLLECTOR_INFO			JSON,
        TRANSACTION_INFO		JSON
	);        
	
	OPEN TEMP_CURSOR;	
	cloop: LOOP
		FETCH TEMP_CURSOR 
		INTO 
			CUR_DISPOSER_ORDER_ID,
			CUR_DISPOSER_ID,
			CUR_COLLECTOR_ID,
			CUR_COLLECTOR_BIDDING_ID,
			CUR_OPEN_AT,
			CUR_CLOSE_AT,
			CUR_DISPOSER_SITE_ID,
			CUR_SUCCESS_BIDDER_ID,
			CUR_COLLECTOR_NAME,
			CUR_AVATAR_PATH;
		
		SET vRowCount = vRowCount + 1;
		IF endOfRow THEN
			LEAVE cloop;
		END IF;
		
		INSERT INTO 
		CURRENT_STATE(
			ID,
			DISPOSER_ID,
			COLLECTOR_BIDDING_ID,
			OPEN_AT,
			CLOSE_AT,
			DISPOSER_SITE_ID,
			SUCCESS_BIDDER_ID,
			AVATAR_PATH,
			COLLECTOR_NAME,
			CONTRACT_TYPE
		)
		VALUES(
			CUR_DISPOSER_ORDER_ID,
			CUR_DISPOSER_ID,
			CUR_COLLECTOR_BIDDING_ID,
			CUR_OPEN_AT,
			CUR_CLOSE_AT,
			CUR_DISPOSER_SITE_ID,
			CUR_SUCCESS_BIDDER_ID,
			CUR_AVATAR_PATH,
			CUR_COLLECTOR_NAME,
			IF(CUR_COLLECTOR_ID IS NULL, '신규', '기존')
		);
        
		SELECT JSON_ARRAYAGG(JSON_OBJECT(
			'SITE_ID'					, C.COMP_SITE_ID, 
            'SITE_NAME'					, C.COMP_SITE_NAME, 
            'ADDR'						, C.COMP_SITE_ADDR, 
            'B_CODE'					, C.COMP_SITE_KIKCD_B_CODE, 
            'SI_DO'						, C.COMP_SITE_SI_DO, 
            'SI_GUN_GU'					, C.COMP_SITE_SI_GUN_GU, 
            'EUP_MYEON_DONG'			, C.COMP_SITE_EUP_MYEON_DONG, 
            'DONG_RI'					, C.COMP_SITE_DONG_RI, 
            'AVATAR_PATH'				, B.AVATAR_PATH, 
            'COLLECTOR_BIDDING_ID'		, A.COLLECTOR_BIDDING_ID, 
            'COLLECTOR_STATE'			, A.STATE, 
            'COLLECTOR_STATE_CODE'		, A.STATE_CODE
		)) 
        INTO @COLLECTOR_INFO
        FROM V_COLLECTOR_BIDDING_WITH_STATE A 
        LEFT JOIN USERS B ON A.COLLECTOR_SITE_ID = B.AFFILIATED_SITE
        LEFT JOIN V_COMP_SITE C ON A.COLLECTOR_SITE_ID = C.COMP_SITE_ID
        WHERE A.SUCCESS_BIDDER = CUR_SUCCESS_BIDDER_ID AND 
        A.COLLECTOR_SITE_ID = A.SUCCESS_BIDDER AND
        B.CLASS = 201;
        
		SELECT JSON_ARRAYAGG(JSON_OBJECT(
			'ID'						, A.ID, 
			'WSTE_NM'					, B.NAME, 
            'QTY'						, A.WSTE_QUANTITY, 
            'UNIT'						, A.WSTE_UNIT, 
            'UNIT_PRICE'				, A.PRICE_UNIT, 
            'COLLECTOR_BIDDING_ID'		, A.COLLECTOR_BIDDING_ID, 
            'COLLECT_ASK_END_AT'		, A.COLLECT_ASK_END_AT, 
            'COLLECTING_TRUCK_ID'		, A.COLLECTING_TRUCK_ID, 
            'TRUCK_DRIVER_ID'			, A.TRUCK_DRIVER_ID, 
            'TRUCK_START_AT'			, A.TRUCK_START_AT, 
            'COLLECT_END_AT'			, A.COLLECT_END_AT, 
            'TRMT_METHOD_CODE'			, A.TRMT_METHOD_CODE, 
            'TRMT_METHOD_NM'			, C.NAME, 
            'QCC_IMG_PATH'				, A.QCC_IMG_PATH, 
            'CONTRACT_ID'				, A.CONTRACT_ID, 
            'CONFIRMER_ID'				, A.CONFIRMER_ID, 
            'DATE_OF_VISIT'				, A.DATE_OF_VISIT, 
            'VISIT_START_AT'			, A.VISIT_START_AT, 
            'VISIT_END_AT'				, A.VISIT_END_AT, 
            'CONFIRMED_AT'				, A.CONFIRMED_AT, 
            'STATE'						, D.STATE, 
            'STATE_CODE'				, D.TRANSACTION_STATE_CODE, 
            'STATE_CATEGORY'			, D.STATE_CATEGORY, 
            'STATE_CATEGORY_ID'			, D.STATE_CATEGORY_ID
		)) 
        INTO @TRANSACTION_INFO
        FROM WSTE_CLCT_TRMT_TRANSACTION A
        LEFT JOIN WSTE_CODE B ON A.WSTE_CODE = B.CODE
        LEFT JOIN WSTE_CODE C ON A.TRMT_METHOD_CODE = C.CODE
        LEFT JOIN V_WSTE_CLCT_TRMT_TRANSACTION_WITH_STATE D ON A.ID = D.TRANSACTION_ID
        WHERE A.COLLECTOR_BIDDING_ID = CUR_COLLECTOR_BIDDING_ID;

		/*처리된 폐기물 종류를 JSON형태로 변환한다.*/
		
		UPDATE CURRENT_STATE 
        SET 
			TRANSACTION_INFO = @TRANSACTION_INFO ,
			COLLECTOR_INFO = @COLLECTOR_INFO 
        WHERE ID = CUR_DISPOSER_ORDER_ID;

		/*위에서 받아온 JSON 타입 데이타를 비롯한 몇가지의 데이타를 NEW_COMING 테이블에 반영한다.*/
		
	END LOOP;   
	CLOSE TEMP_CURSOR;
	
	SELECT JSON_ARRAYAGG(JSON_OBJECT(
		'ID'					, ID, 
		'DISPOSER_ID'			, DISPOSER_ID, 
		'COLLECTOR_BIDDING_ID'	, COLLECTOR_BIDDING_ID, 
		'OPEN_AT'				, OPEN_AT, 
		'CLOSE_AT'				, CLOSE_AT, 
		'DISPOSER_SITE_ID'		, DISPOSER_SITE_ID, 
		'SUCCESS_BIDDER_ID'		, SUCCESS_BIDDER_ID, 
		'AVATAR_PATH'			, AVATAR_PATH, 
		'COLLECTOR_NAME'		, COLLECTOR_NAME, 
		'CONTRACT_TYPE'			, CONTRACT_TYPE, 
		'COLLECTOR_INFO'		, COLLECTOR_INFO, 
        'TRANSACTION_INFO'		, TRANSACTION_INFO
	)) 
    INTO @json_data 
    FROM CURRENT_STATE;
    
    IF vRowCount = 1 THEN
		SET @rtn_val = 28901;
		SET @msg_txt = 'No data found';
		SIGNAL SQLSTATE '23000';
    ELSE
		SET @rtn_val = 0;
		SET @msg_txt = 'Success';
    END IF;
    COMMIT;   
	DROP TABLE IF EXISTS CURRENT_STATE;
	CALL sp_return_results(@rtn_val, @msg_txt, @json_data);
END