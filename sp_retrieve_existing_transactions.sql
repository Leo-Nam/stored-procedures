CREATE DEFINER=`chiumdb`@`%` PROCEDURE `sp_retrieve_existing_transactions`(
	IN IN_USER_ID							BIGINT
)
BEGIN

/*
Procedure Name 	: sp_retrieve_existing_transactions
Input param 	: 2개
Job 			: 현재 처리중인 업체(거래내역)를 리스트한다.
Update 			: 2022.01.25
Version			: 0.0.1
AUTHOR 			: Leo Nam
*/

    DECLARE vRowCount 							INT 				DEFAULT 0;
    DECLARE endOfRow 							TINYINT 			DEFAULT FALSE;    
    DECLARE CUR_DISPOSER_ORDER_ID				BIGINT; 
    DECLARE CUR_DISPOSER_ORDER_CODE				VARCHAR(10);
    DECLARE CUR_DISPOSER_ID						BIGINT;
    DECLARE CUR_COLLECTOR_ID					BIGINT;
    DECLARE CUR_COLLECTOR_BIDDING_ID			BIGINT;
    DECLARE CUR_OPEN_AT							DATETIME;
    DECLARE CUR_CLOSE_AT						DATETIME;
    DECLARE CUR_DISPOSER_SITE_ID				BIGINT;	
    DECLARE CUR_AVATAR_PATH						VARCHAR(255);
    DECLARE TEMP_CURSOR		 					CURSOR FOR 
    
	SELECT 
		A.ID, 
		A.ORDER_CODE, 
		A.DISPOSER_ID, 
		A.COLLECTOR_ID, 
		A.COLLECTOR_BIDDING_ID, 
        A.OPEN_AT, 
        A.CLOSE_AT, 
        A.SITE_ID, 
        IF(A.COLLECTOR_ID IS NULL, F.AVATAR_PATH, G.AVATAR_PATH)
    FROM SITE_WSTE_DISPOSAL_ORDER A
	LEFT JOIN USERS B ON IF(B.AFFILIATED_SITE = 0, A.DISPOSER_ID = B.ID, A.SITE_ID = B.AFFILIATED_SITE)
	LEFT JOIN WSTE_CLCT_TRMT_TRANSACTION C ON A.ID = C.DISPOSAL_ORDER_ID
	LEFT JOIN V_ORDER_STATE_NAME D ON A.ID = D.DISPOSER_ORDER_ID
    LEFT JOIN COLLECTOR_BIDDING E ON A.COLLECTOR_BIDDING_ID = E.ID
    LEFT JOIN USERS F ON E.COLLECTOR_ID = F.AFFILIATED_SITE
    LEFT JOIN USERS G ON A.COLLECTOR_ID = G.AFFILIATED_SITE
	WHERE 
		B.ID = IN_USER_ID AND
        B.ACTIVE = TRUE AND
        A.CLOSE_AT > NOW() AND
        D.STATE_CATEGORY_ID = 6;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET endOfRow = TRUE;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		SET @json_data 		= NULL;
		DROP TABLE IF EXISTS EXISTING_TRANSACTION_TEMP;
		ROLLBACK;
		CALL sp_return_results(@rtn_val, @msg_txt, @json_data);
	END;        
	START TRANSACTION;							
    /*트랜잭션 시작*/  
    
	CREATE TEMPORARY TABLE IF NOT EXISTS EXISTING_TRANSACTION_TEMP (
		DISPOSER_ORDER_ID		BIGINT,
		DISPOSER_ORDER_CODE		VARCHAR(10),
		DISPOSER_ID				BIGINT,
		COLLECTOR_ID			BIGINT,
		COLLECTOR_BIDDING_ID	BIGINT,
		OPEN_AT					DATETIME,
		CLOSE_AT				DATETIME,
		DISPOSER_SITE_ID		BIGINT,
		AVATAR_PATH				VARCHAR(255),
		COLLECTOR_SITE_NAME		VARCHAR(255),
		TRANSACTION_TYPE		VARCHAR(20),
        TRANSACTION_INFO		JSON,
        WSTE_INFO				JSON,
        COLLECTOR_INFO			JSON
	);        
	
	OPEN TEMP_CURSOR;	
	cloop: LOOP
		FETCH TEMP_CURSOR 
		INTO 
			CUR_DISPOSER_ORDER_ID,
			CUR_DISPOSER_ORDER_CODE,
			CUR_DISPOSER_ID,
			CUR_COLLECTOR_ID,
			CUR_COLLECTOR_BIDDING_ID,
			CUR_OPEN_AT,
			CUR_CLOSE_AT,
			CUR_DISPOSER_SITE_ID,
			CUR_AVATAR_PATH;
		
		SET vRowCount = vRowCount + 1;
		IF endOfRow THEN
			LEAVE cloop;
		END IF;
		
		INSERT INTO 
		EXISTING_TRANSACTION_TEMP(
			DISPOSER_ORDER_ID,
			DISPOSER_ORDER_CODE,
			DISPOSER_ID,
			COLLECTOR_ID,
			COLLECTOR_BIDDING_ID,
			OPEN_AT,
			CLOSE_AT,
			DISPOSER_SITE_ID,
			AVATAR_PATH,
            TRANSACTION_TYPE
		)
		VALUES(
			CUR_DISPOSER_ORDER_ID,
			CUR_DISPOSER_ORDER_CODE,
			CUR_DISPOSER_ID,
			CUR_COLLECTOR_ID,
			CUR_COLLECTOR_BIDDING_ID,
			CUR_OPEN_AT,
			CUR_CLOSE_AT,
			CUR_DISPOSER_SITE_ID,
			CUR_AVATAR_PATH,
			IF(CUR_COLLECTOR_ID IS NULL OR CUR_COLLECTOR_ID = 0, '입찰거래', '기존거래')
		);
        
		CALL sp_get_transaction_info(
			CUR_DISPOSER_ORDER_ID,
            @TRANSACTION_INFO
        );
        
        CALL sp_get_disposal_wste_lists(
			CUR_DISPOSER_ORDER_ID,
            @DISPOSER_WSTE_INFO
        ); 
        /*
        SET @COLLECTOR_SITE_NAME = 'SIKSIK SOFTWARE CO,.LTD';
        */
        
        SELECT B.SITE_NAME INTO @COLLECTOR_SITE_NAME
        FROM COLLECTOR_BIDDING A
        LEFT JOIN COMP_SITE B ON A.COLLECTOR_ID = B.ID
        WHERE A.ID = CUR_COLLECTOR_BIDDING_ID;
		
		UPDATE EXISTING_TRANSACTION_TEMP 
        SET 
			COLLECTOR_SITE_NAME	= @COLLECTOR_SITE_NAME,
			TRANSACTION_INFO 	= @TRANSACTION_INFO,
			WSTE_INFO 			= @DISPOSER_WSTE_INFO 
        WHERE DISPOSER_ORDER_ID = CUR_DISPOSER_ORDER_ID;
	
		/*위에서 받아온 JSON 타입 데이타를 비롯한 몇가지의 데이타를 NEW_COMING 테이블에 반영한다.*/
		
	END LOOP;   
	CLOSE TEMP_CURSOR;
	
	SELECT JSON_ARRAYAGG(JSON_OBJECT(
		'DISPOSER_ORDER_ID'		, DISPOSER_ORDER_ID, 
		'DISPOSER_ORDER_CODE'	, DISPOSER_ORDER_CODE, 
		'DISPOSER_ID'			, DISPOSER_ID, 
		'COLLECTOR_BIDDING_ID'	, COLLECTOR_BIDDING_ID, 
		'OPEN_AT'				, OPEN_AT, 
		'CLOSE_AT'				, CLOSE_AT, 
		'DISPOSER_SITE_ID'		, DISPOSER_SITE_ID, 
		'AVATAR_PATH'			, AVATAR_PATH, 
		'COLLECTOR_SITE_NAME'	, COLLECTOR_SITE_NAME, 
		'TRANSACTION_TYPE'		, TRANSACTION_TYPE, 
        'TRANSACTION_INFO'		, TRANSACTION_INFO, 
        'WSTE_INFO'				, WSTE_INFO
	)) 
    INTO @json_data 
    FROM EXISTING_TRANSACTION_TEMP;
    
    IF vRowCount = 1 THEN
		SET @rtn_val = 28901;
		SET @msg_txt = 'No data found2';
		SIGNAL SQLSTATE '23000';
    ELSE
		SET @rtn_val = 0;
		SET @msg_txt = 'Success1234';
    END IF;
	DROP TABLE IF EXISTS EXISTING_TRANSACTION_TEMP;
    COMMIT;
	CALL sp_return_results(@rtn_val, @msg_txt, @json_data);
END