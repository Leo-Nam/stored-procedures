CREATE DEFINER=`chiumdb`@`%` PROCEDURE `sp_req_processing_status`(
	IN IN_TRANSACTION_ID					BIGINT,
	IN IN_STATE								TINYINT			/*입력값 : 현재처리중인것은 TRUE, 과거처리내역은 FALSE*/
)
BEGIN

/*
Procedure Name 	: sp_req_processing_status
Input param 	: 2개
Job 			: 폐기물 처리중인 작업에 대한 개별 상태 반환
Update 			: 2022.01.30
Version			: 0.0.2
AUTHOR 			: Leo Nam
*/

    DECLARE vRowCount 						INT DEFAULT 0;
    DECLARE endOfRow 						TINYINT DEFAULT FALSE;    
    DECLARE CUR_TRANSACTION_ID				BIGINT;
    DECLARE CUR_COLLECTOR_SITE_ID			BIGINT;
    DECLARE CUR_COLLECTOR_SITE_NAME			VARCHAR(255);
    DECLARE CUR_DISPOSER_ORDER_ID			BIGINT;	
    DECLARE CUR_DISPOSER_ORDER_CODE			VARCHAR(10);	
    DECLARE CUR_TRANSACTION_STATE			VARCHAR(20);
    DECLARE CUR_DISPOSER_OPEN_AT			DATETIME;	
    DECLARE CUR_DISPOSER_SI_DO				VARCHAR(20);	
    DECLARE CUR_DISPOSER_SI_GUN_GU			VARCHAR(20);	
    DECLARE CUR_DISPOSER_EUP_MYEON_DONG		VARCHAR(20);	
    DECLARE CUR_DISPOSER_DONG_RI			VARCHAR(20);	
    DECLARE CUR_DISPOSER_ADDR				VARCHAR(255);
    DECLARE TEMP_CURSOR		 				CURSOR FOR 
	SELECT 
		TRANSACTION_ID, 
        COLLECTOR_SITE_ID,
        COLLECTOR_SITE_NAME,
        DISPOSER_ORDER_ID,
        DISPOSER_ORDER_CODE,
        TRANSACTION_STATE,
        DISPOSER_OPEN_AT,
        DISPOSER_SI_DO,
        DISPOSER_SI_GUN_GU,
        DISPOSER_EUP_MYEON_DONG,
        DISPOSER_DONG_RI,
        DISPOSER_ADDR
        
    FROM V_WSTE_CLCT_TRMT_TRANSACTION
	WHERE TRANSACTION_ID = IN_TRANSACTION_ID AND ISNULL(CONFIRMED_AT) = IF(IN_STATE = FALSE, FALSE, TRUE);
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET endOfRow = TRUE;
    
	CREATE TEMPORARY TABLE IF NOT EXISTS CURRENT_STATE (
		TRANSACTION_ID				BIGINT,
		COLLECTOR_SITE_ID			BIGINT,
		COLLECTOR_SITE_NAME			VARCHAR(255),
		DISPOSER_ORDER_ID			BIGINT,
		DISPOSER_ORDER_CODE			VARCHAR(10),
		TRANSACTION_STATE			VARCHAR(20),
		DISPOSER_OPEN_AT			DATETIME,
		DISPOSER_SI_DO				VARCHAR(20),
		DISPOSER_SI_GUN_GU			VARCHAR(20),
		DISPOSER_EUP_MYEON_DONG		VARCHAR(20),
		DISPOSER_DONG_RI			VARCHAR(20),
		DISPOSER_ADDR				VARCHAR(255),
		WSTE_LIST					JSON,
		IMG_LIST					JSON
	);        
	
	OPEN TEMP_CURSOR;	
	cloop: LOOP
		FETCH TEMP_CURSOR 
		INTO 
			CUR_TRANSACTION_ID,
			CUR_COLLECTOR_SITE_ID,
			CUR_COLLECTOR_SITE_NAME,
			CUR_DISPOSER_ORDER_ID,
			CUR_DISPOSER_ORDER_CODE,
			CUR_TRANSACTION_STATE,
			CUR_DISPOSER_OPEN_AT,
			CUR_DISPOSER_SI_DO,
			CUR_DISPOSER_SI_GUN_GU,
			CUR_DISPOSER_EUP_MYEON_DONG,
			CUR_DISPOSER_DONG_RI,
			CUR_DISPOSER_ADDR;   
		
		SET vRowCount = vRowCount + 1;
		IF endOfRow THEN
			LEAVE cloop;
		END IF;
		
		INSERT INTO 
		CURRENT_STATE(
			TRANSACTION_ID, 
			COLLECTOR_SITE_ID, 
			COLLECTOR_SITE_NAME, 
			DISPOSER_ORDER_ID, 
			DISPOSER_ORDER_CODE, 
			TRANSACTION_STATE, 
			DISPOSER_OPEN_AT, 
			DISPOSER_SI_DO, 
			DISPOSER_SI_GUN_GU, 
			DISPOSER_EUP_MYEON_DONG, 
			DISPOSER_DONG_RI, 
			DISPOSER_ADDR
		)
		VALUES(
			CUR_TRANSACTION_ID, 
			CUR_COLLECTOR_SITE_ID, 
			CUR_COLLECTOR_SITE_NAME, 
			CUR_DISPOSER_ORDER_ID, 
			CUR_DISPOSER_ORDER_CODE, 
			CUR_TRANSACTION_STATE, 
			CUR_DISPOSER_OPEN_AT, 
			CUR_DISPOSER_SI_DO, 
			CUR_DISPOSER_SI_GUN_GU, 
			CUR_DISPOSER_EUP_MYEON_DONG, 
			CUR_DISPOSER_DONG_RI, 
			CUR_DISPOSER_ADDR
		);
        
		SELECT JSON_ARRAYAGG(
			JSON_OBJECT(
				'WSTE_NM', WSTE_NM, 
                'APR', WSTE_APPEARANCE_NM_KO, 
                'QTY', WSTE_QUANTITY, 
                'UNIT', WSTE_UNIT, 
                'UNIT_PRICE', WSTE_UNIT_PRICE, 
                'TRMT_NM', WSTE_TRMT_METHOD_NM, 
                'DC_AT', WSTE_DISCHARGED_AT
			)
		) 
        INTO @WSTE_LIST 
        FROM V_WSTE_LIST_DISCHARGED 
        WHERE WSTE_CLCT_TRMT_TRANSACTION_ID = CUR_TRANSACTION_ID;
		/*처리된 폐기물 종류를 JSON형태로 변환한다.*/
		
		SELECT JSON_ARRAYAGG(JSON_OBJECT('ID', ID, 'PATH', IMG_PATH)) INTO @IMG_LIST FROM WSTE_REGISTRATION_PHOTO WHERE DISPOSAL_ORDER_ID = CUR_DISPOSER_ORDER_ID AND CLASS_CODE = '처리';
		/*DISPOSAL_ORDER_ID에 해당하는 이미지에 대한 저장경로를 JSON 형태로 받아온다.*/
		
		UPDATE CURRENT_STATE SET IMG_LIST = @IMG_LIST, WSTE_LIST = @WSTE_LIST WHERE TRANSACTION_ID = CUR_TRANSACTION_ID;
		/*위에서 받아온 JSON 타입 데이타를 비롯한 몇가지의 데이타를 NEW_COMING 테이블에 반영한다.*/
		
		
	END LOOP;   
	CLOSE TEMP_CURSOR;
    
    IF vRowCount = 0 THEN
		SET @rtn_val = 20801;
		SET @msg_txt = 'No data found';
		SET @json_data = NULL;
    ELSE
		SET @rtn_val = 0;
		SET @msg_txt = 'Success';	
		SELECT JSON_ARRAYAGG(
			JSON_OBJECT(
				'TRANSACTION_ID'			, TRANSACTION_ID, 
				'COLLECTOR_SITE_ID'			, COLLECTOR_SITE_ID, 
				'COLLECTOR_SITE_NAME'		, COLLECTOR_SITE_NAME, 
				'DISPOSER_ORDER_ID'			, DISPOSER_ORDER_ID, 
				'TRANSACTION_STATE'			, TRANSACTION_STATE, 
				'DISPOSER_OPEN_AT'			, DISPOSER_OPEN_AT, 
				'DISPOSER_SI_DO'			, DISPOSER_SI_DO, 
				'DISPOSER_SI_GUN_GU'		, DISPOSER_SI_GUN_GU, 
				'DISPOSER_EUP_MYEON_DONG'	, DISPOSER_EUP_MYEON_DONG, 
				'DISPOSER_DONG_RI'			, DISPOSER_DONG_RI, 
				'DISPOSER_ADDR'				, DISPOSER_ADDR, 
				'WSTE_LIST'					, WSTE_LIST, 
				'IMG_LIST'					, IMG_LIST
			)
		) 
		INTO @json_data 
		FROM CURRENT_STATE;
    END IF;
	CALL sp_return_results(@rtn_val, @msg_txt, @json_data);    
	DROP TABLE IF EXISTS CURRENT_STATE;
END