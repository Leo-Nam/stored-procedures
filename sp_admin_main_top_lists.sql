CREATE DEFINER=`chiumdb`@`%` PROCEDURE `sp_admin_main_top_lists`(
	IN IN_MENU							INT,			/*1:배출자, 2:수거자, 3:처리업체, 4:답변대기*/
    IN IN_ADMIN_MAIN_DURATION			INT,
    IN IN_OFFSET_SIZE					INT,
    IN IN_PAGE_SIZE						INT,
    OUT OUT_LISTS						JSON
)
BEGIN

/*
Procedure Name 	: sp_admin_retrieve_main_history
Input param 	: 1개
Job 			: 관리자 메인에서 각 상단메뉴별로 실시간 현황 상세내역을 반환한다.
Update 			: 2022.04.24
Version			: 0.0.1
AUTHOR 			: Leo Nam
*/

    DECLARE vRowCount 							INT DEFAULT 0;
    DECLARE endOfRow 							TINYINT DEFAULT FALSE;    
    DECLARE CUR_PUSH_ID							BIGINT;    
    DECLARE CUR_USER_ID							BIGINT;   
    DECLARE CUR_USER_NAME						VARCHAR(255);  
    DECLARE CUR_USER_COMP_SITE_ID				INT;   
    DECLARE CUR_USER_TYPE						VARCHAR(20);  
    DECLARE CUR_SENDER_ID						BIGINT; 
    DECLARE CUR_SENDER_TYPE						VARCHAR(20); 
    DECLARE CUR_PUSH_CATEGORY_ID				INT;
    DECLARE CUR_PUSH_CATEGORY					VARCHAR(45);
    DECLARE CUR_PUSH_TITLE						VARCHAR(255);
    DECLARE CUR_PUSH_BODY						VARCHAR(255);
    DECLARE CUR_PUSH_CREATED					DATETIME;
    DECLARE TEMP_CURSOR		 					CURSOR FOR 
	SELECT 
		A.ID, 
        A.USER_ID, 
        IF(C.AFFILIATED_SITE = 0, C.USER_NAME, D.SITE_NAME),
        C.AFFILIATED_SITE,
        IF(C.AFFILIATED_SITE = 0, '개인배출자', G.NAME),
        A.SENDER_ID,
        IF(A.SENDER_ID = 0, '시스템', IF(E.AFFILIATED_SITE = 0, '개인배출자', H.NAME)),
        A.CATEGORY_ID,
        B.KO,
        A.TITLE,
        A.BODY,
        A.CREATED_AT
    FROM PUSH_HISTORY A
    LEFT JOIN PUSH_CATEGORY B ON A.CATEGORY_ID = B.ID
    LEFT JOIN USERS C ON A.USER_ID = C.ID
    LEFT JOIN COMP_SITE D ON C.AFFILIATED_SITE = D.ID
    LEFT JOIN USERS E ON A.SENDER_ID = E.ID
    LEFT JOIN COMP_SITE F ON E.AFFILIATED_SITE = F.ID
    LEFT JOIN WSTE_TRMT_BIZ G ON D.TRMT_BIZ_CODE = G.CODE
    LEFT JOIN WSTE_TRMT_BIZ H ON F.TRMT_BIZ_CODE = H.CODE
	WHERE 
		A.DELETED = FALSE AND
        (
			C.AFFILIATED_SITE = 0 OR 
			IF(IN_MENU = 0, 
				D.TRMT_BIZ_CODE = 9, 
                IF(IN_MENU = 1, 
					D.TRMT_BIZ_CODE = 1, 
                    (D.TRMT_BIZ_CODE > 1 AND D.TRMT_BIZ_CODE < 9)
				)
			) OR 
            A.SENDER_ID = 0 OR 
            IF(A.SENDER_ID > 0, 
                IF(IN_MENU = 0, 
					F.TRMT_BIZ_CODE = 9, 
                    IF(IN_MENU = 1, 
						F.TRMT_BIZ_CODE = 1, 
                        (F.TRMT_BIZ_CODE > 1 AND F.TRMT_BIZ_CODE < 9)
					)
				), 
                A.ID = 0
			)
		) AND
        NOW() <= DATE_ADD(A.CREATED_AT, INTERVAL CAST(IN_ADMIN_MAIN_DURATION AS UNSIGNED) DAY)
	ORDER BY A.CREATED_AT DESC
    LIMIT IN_OFFSET_SIZE, IN_PAGE_SIZE;   
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET endOfRow = TRUE;
    
    SET OUT_LISTS = NULL;
	CREATE TEMPORARY TABLE IF NOT EXISTS ADMIN_MAIN_TOP_LISTS (
		PUSH_ID						BIGINT,
		USER_ID						BIGINT,
		USER_NAME					VARCHAR(255),
        USER_COMP_SITE_ID			BIGINT,
        USER_TYPE					VARCHAR(20),
        SENDER_ID					BIGINT,
        SENDER_TYPE					VARCHAR(20),
        PUSH_CATEGORY_ID			INT,
        PUSH_CATEGORY				VARCHAR(45),
		PUSH_TITLE					VARCHAR(255),
		PUSH_BODY					VARCHAR(255),
        PUSH_CREATED				DATETIME        
	);        
	
	OPEN TEMP_CURSOR;	
	cloop: LOOP
		
		FETCH TEMP_CURSOR 
		INTO 
			CUR_PUSH_ID,
			CUR_USER_ID,
			CUR_USER_NAME,
			CUR_USER_COMP_SITE_ID,
			CUR_USER_TYPE,
			CUR_SENDER_ID,
			CUR_SENDER_TYPE,
			CUR_PUSH_CATEGORY_ID,
			CUR_PUSH_CATEGORY,
			CUR_PUSH_TITLE,
			CUR_PUSH_BODY,
			CUR_PUSH_CREATED;
		
		SET vRowCount = vRowCount + 1;
		IF endOfRow THEN
			LEAVE cloop;
		END IF;
		
		INSERT INTO 
		ADMIN_MAIN_TOP_LISTS(
			PUSH_ID,
			USER_ID,
			USER_NAME,
			USER_COMP_SITE_ID,
			USER_TYPE,
			SENDER_ID,
			SENDER_TYPE,
			PUSH_CATEGORY_ID,
			PUSH_CATEGORY,
			PUSH_TITLE,
			PUSH_BODY,
			PUSH_CREATED
		)
		VALUES(
			CUR_PUSH_ID,
			CUR_USER_ID,
			CUR_USER_NAME,
			CUR_USER_COMP_SITE_ID,
			CUR_USER_TYPE,
			CUR_SENDER_ID,
			CUR_SENDER_TYPE,
			CUR_PUSH_CATEGORY_ID,
			CUR_PUSH_CATEGORY,
			CUR_PUSH_TITLE,
			CUR_PUSH_BODY,
			CUR_PUSH_CREATED
		);
	END LOOP;   
	CLOSE TEMP_CURSOR;
	
	SELECT JSON_ARRAYAGG(JSON_OBJECT(
		'PUSH_ID'					, PUSH_ID, 
        'USER_ID'					, USER_ID, 
        'USER_NAME'					, USER_NAME, 
        'USER_COMP_SITE_ID'			, USER_COMP_SITE_ID, 
        'USER_TYPE'					, USER_TYPE, 
        'SENDER_ID'					, SENDER_ID, 
        'SENDER_TYPE'				, SENDER_TYPE, 
        'PUSH_CATEGORY_ID'			, PUSH_CATEGORY_ID, 
        'PUSH_CATEGORY'				, PUSH_CATEGORY, 
        'PUSH_TITLE'				, PUSH_TITLE, 
        'PUSH_BODY'					, PUSH_BODY, 
        'PUSH_CREATED'				, PUSH_CREATED
	)) 
    INTO OUT_LISTS FROM ADMIN_MAIN_TOP_LISTS;
    
	DROP TABLE IF EXISTS ADMIN_MAIN_TOP_LISTS;
END