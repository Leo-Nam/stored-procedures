CREATE DEFINER=`chiumdb`@`%` PROCEDURE `sp_get_user_info`(
	IN IN_USER_ID			BIGINT,
    OUT rtn_val				INT,
    OUT msg_txt				VARCHAR(200),
    OUT OUT_USER_INFO		JSON
)
BEGIN
    DECLARE vRowCount 							INT DEFAULT 0;
    DECLARE endOfRow 							TINYINT DEFAULT FALSE;    
    DECLARE CUR_ID								BIGINT; 
    DECLARE CUR_USER_NAME						VARCHAR(20);
    DECLARE CUR_PHONE							VARCHAR(20);
    DECLARE CUR_BELONG_TO						BIGINT;
    DECLARE CUR_AFFILIATED_SITE					BIGINT;
    DECLARE CUR_ACTIVE							TINYINT;
    DECLARE CUR_CLASS							INT;
    DECLARE CUR_CS_MANAGER_ID					BIGINT;
    DECLARE CUR_CONFIRMED						TINYINT;
    DECLARE CUR_CONFIRMED_AT					DATETIME;
    DECLARE CUR_CREATED_AT						DATETIME;
    DECLARE CUR_UPDATED_AT						DATETIME;
    DECLARE CUR_AGREEMENT_TERMS					TINYINT;
    DECLARE CUR_USER_CURRENT_TYPE				INT;
    DECLARE CUR_AVATAR_PATH						VARCHAR(255);
    DECLARE CUR_PUSH_ENABLED					TINYINT;
    DECLARE CUR_NOTICE_ENABLED					TINYINT;
    DECLARE TEMP_CURSOR		 					CURSOR FOR 
	SELECT 
		ID, 
        USER_NAME,
		PHONE, 
		BELONG_TO,
		AFFILIATED_SITE,
        ACTIVE,
        CLASS,
		CS_MANAGER_ID, 
		CONFIRMED, 
        CONFIRMED_AT,
        CREATED_AT,
        UPDATED_AT,
        AGREEMENT_TERMS,
        USER_CURRENT_TYPE,
        AVATAR_PATH,
        PUSH_ENABLED,
        NOTICE_ENABLED
	FROM USERS
	WHERE 
		ID = IN_USER_ID;    
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET endOfRow = TRUE;	       
	
	OPEN TEMP_CURSOR;	
	cloop: LOOP
		FETCH TEMP_CURSOR 
		INTO 
			CUR_ID,
			CUR_USER_NAME,
			CUR_PHONE,
			CUR_BELONG_TO,
			CUR_AFFILIATED_SITE,
			CUR_ACTIVE,
			CUR_CLASS,
			CUR_CS_MANAGER_ID,
			CUR_CONFIRMED,
			CUR_CONFIRMED_AT,
			CUR_CREATED_AT,
			CUR_UPDATED_AT,
			CUR_AGREEMENT_TERMS,
			CUR_USER_CURRENT_TYPE,
			CUR_AVATAR_PATH,
			CUR_PUSH_ENABLED,
			CUR_NOTICE_ENABLED;
		
		SET vRowCount = vRowCount + 1;
		IF endOfRow THEN
			LEAVE cloop;
		END IF;
        
		CREATE TEMPORARY TABLE IF NOT EXISTS USER_INFO_TEMP (
			ID						BIGINT,
			USER_NAME				VARCHAR(20),
			PHONE					VARCHAR(20),
			BELONG_TO				BIGINT,
			AFFILIATED_SITE			BIGINT,
			ACTIVE					TINYINT,
			CLASS					INT,
			CS_MANAGER_ID			BIGINT,
			CONFIRMED				TINYINT,
			CONFIRMED_AT			DATETIME,
			CREATED_AT				DATETIME,
			UPDATED_AT				DATETIME,
			AGREEMENT_TERMS			TINYINT,
			USER_CURRENT_TYPE		INT,
			AVATAR_PATH				VARCHAR(255),
			PUSH_ENABLED			TINYINT,
			NOTICE_ENABLED			TINYINT,
			SITE_INFO				JSON,
			COMPANY_INFO			JSON
		);     
		
		INSERT INTO USER_INFO_TEMP (
			ID,
			USER_NAME,
			PHONE,
			BELONG_TO,
			AFFILIATED_SITE,
			ACTIVE,
			CLASS,
			CS_MANAGER_ID,
			CONFIRMED,
			CONFIRMED_AT,
			CREATED_AT,
			UPDATED_AT,
			AGREEMENT_TERMS,
			USER_CURRENT_TYPE,
			AVATAR_PATH,
			PUSH_ENABLED,
			NOTICE_ENABLED
		)
		VALUES(
			CUR_ID,
			CUR_USER_NAME,
			CUR_PHONE,
			CUR_BELONG_TO,
			CUR_AFFILIATED_SITE,
			CUR_ACTIVE,
			CUR_CLASS,
			CUR_CS_MANAGER_ID,
			CUR_CONFIRMED,
			CUR_CONFIRMED_AT,
			CUR_CREATED_AT,
			CUR_UPDATED_AT,
			CUR_AGREEMENT_TERMS,
			CUR_USER_CURRENT_TYPE,
			CUR_AVATAR_PATH,
			CUR_PUSH_ENABLED,
			CUR_NOTICE_ENABLED
		);
		
		CALL sp_get_company_info(
			CUR_BELONG_TO,
            @COMPANY_INFO
		);
		
		CALL sp_get_site_info_simple(
			CUR_AFFILIATED_SITE,
            @SITE_INFO
		);
        UPDATE USER_INFO_TEMP
        SET 
			COMPANY_INFO = @COMPANY_INFO,
			SITE_INFO = @SITE_INFO
        WHERE ID = CUR_ID;
	END LOOP;   
	CLOSE TEMP_CURSOR;
	
	SELECT JSON_ARRAYAGG(
		JSON_OBJECT(
			'ID'						, ID, 
			'USER_NAME'					, USER_NAME, 
			'PHONE'						, PHONE, 
			'BELONG_TO'					, BELONG_TO,
			'AFFILIATED_SITE'			, AFFILIATED_SITE,
			'ACTIVE'					, ACTIVE,
			'CLASS'						, CLASS,
			'CS_MANAGER_ID'				, CS_MANAGER_ID, 
			'CONFIRMED'					, CONFIRMED,
			'CONFIRMED_AT'				, CONFIRMED_AT,
			'CREATED_AT'				, CREATED_AT,
			'UPDATED_AT'				, UPDATED_AT,
			'AGREEMENT_TERMS'			, AGREEMENT_TERMS,
			'USER_CURRENT_TYPE'			, USER_CURRENT_TYPE,
			'AVATAR_PATH'				, AVATAR_PATH,
			'PUSH_ENABLED'				, PUSH_ENABLED,
			'NOTICE_ENABLED'			, NOTICE_ENABLED,
			'COMPANY_INFO'				, COMPANY_INFO,
			'SITE_INFO'					, SITE_INFO
		)
	) INTO OUT_USER_INFO FROM USER_INFO_TEMP;
    
	SET rtn_val = 0;
	SET msg_txt = 'Success';
	DROP TABLE IF EXISTS USER_INFO_TEMP;
END