CREATE DEFINER=`chiumdb`@`%` PROCEDURE `sp_admin_retrieve_site_lists`(
    IN IN_PARAMS					JSON
)
BEGIN
    
	SELECT USER_ID, SEARCH, OFFSET_SIZE, PAGE_SIZE, EMIT_OR_COL, CONFIRMED
    INTO @USER_ID, @SEARCH, @OFFSET_SIZE, @PAGE_SIZE, @EMIT_OR_COL, @CONFIRMED
    FROM JSON_TABLE(IN_PARAMS, "$[*]" COLUMNS(
		USER_ID 				BIGINT 				PATH "$.USER_ID",
		SEARCH	 				VARCHAR(255)		PATH "$.SEARCH",
		OFFSET_SIZE 			INT 				PATH "$.OFFSET_SIZE",
		PAGE_SIZE 				INT 				PATH "$.PAGE_SIZE",
		EMIT_OR_COL				TINYINT				PATH "$.EMIT_OR_COL",
		CONFIRMED 				TINYINT				PATH "$.CONFIRMED"
	)) AS PARAMS;
    
	CREATE TEMPORARY TABLE IF NOT EXISTS ADMIN_RETRIEVE_SITE_LISTS_TEMP (
        USER_ID					BIGINT,
        SEARCH					VARCHAR(255),
        OFFSET_SIZE				INT,
        PAGE_SIZE				INT,
        CONFIRMED				TINYINT,
        TARGET_USER_TYPE		INT,
        SITE_LISTS				JSON
	);  
    
    IF @EMIT_OR_COL IS NOT NULL THEN
		IF @EMIT_OR_COL = TRUE THEN
			SET @TARGET_USER_TYPE = 3;
		ELSE
			SET @TARGET_USER_TYPE = 2;
		END IF;
    ELSE
		SET @TARGET_USER_TYPE = NULL;
    END IF;
    CALL sp_admin_retrieve_site_lists_without_handler(
		@SEARCH,
		@OFFSET_SIZE,
		@PAGE_SIZE,
		@CONFIRMED,
		@TARGET_USER_TYPE,
		@SITE_LISTS
    );
    
	INSERT INTO 
	ADMIN_RETRIEVE_SITE_LISTS_TEMP(
		USER_ID,
		SEARCH,
		OFFSET_SIZE,
		PAGE_SIZE,
		CONFIRMED,
		TARGET_USER_TYPE,
		SITE_LISTS
	)
	VALUES(
		@USER_ID,
		@SEARCH,
		@OFFSET_SIZE,
		@PAGE_SIZE,
		@CONFIRMED,
		@TARGET_USER_TYPE,
		@SITE_LISTS
	);
    
	SELECT JSON_ARRAYAGG(JSON_OBJECT(
        'USER_ID'				, @USER_ID,
        'SEARCH'				, @SEARCH,
        'OFFSET_SIZE'			, @OFFSET_SIZE,
        'PAGE_SIZE'				, @PAGE_SIZE,
        'CONFIRMED'				, @CONFIRMED,
        'TARGET_USER_TYPE'		, @TARGET_USER_TYPE,
        'SITE_LISTS'			, @SITE_LISTS
	)) 
    INTO @json_data FROM ADMIN_RETRIEVE_SITE_LISTS_TEMP;
    
	DROP TABLE IF EXISTS ADMIN_RETRIEVE_SITE_LISTS_TEMP;
    SET @rtn_val = 0;
    SET @msg_txt = 'success999';
	CALL sp_return_results(@json_data, @msg_txt, @json_data);
END